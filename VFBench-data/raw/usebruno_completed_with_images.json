[
  {
    "id": 3113441783,
    "number": 4823,
    "html_url": "https://github.com/usebruno/bruno/issues/4823",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-06-03 10:44:50",
    "updated_date": "2025-06-03 21:16:15",
    "resolved_date": "2025-06-03 21:16:14",
    "title": "Project-Based Collection Segregation (Workspaces-Like Support)",
    "body": "### I have checked the following:\n\n- [x] I've searched existing issues and found nothing related to my issue.\n\n### This feature\n\n- [ ] blocks me from using Bruno\n- [x] would improve my quality of life in Bruno\n- [ ] is something I've never seen an API client do before\n\n### Describe the feature you want to add, and how it would change your usage of Bruno\n\nIt would be great to have a way to organise or segregate collections in Bruno similar to Postman Workspaces. This would help to manage APIs across different projects more effectively.\n\n### Use Case:\nWhen working on multiple APIs or clients, it's important to keep collections organised by project. Right now, all collections are listed together, which can get cluttered. A workspace-like feature would allow users to switch between sets of collections depending on the project.\n\n### Mockups or Images of the feature\n\n![Image](https://github.com/user-attachments/assets/b519c7b8-d2c2-45e0-b8df-ac3cdbf16c8a)",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/4823/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/4823/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/4823/events",
    "user_login": "ganesh-bruno",
    "user_url": "https://github.com/ganesh-bruno",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 3109692472,
    "number": 4815,
    "html_url": "https://github.com/usebruno/bruno/issues/4815",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-06-02 11:05:19",
    "updated_date": "2025-06-05 20:20:21",
    "resolved_date": "2025-06-05 20:20:20",
    "title": "Double-click to rename a request",
    "body": "### I have checked the following:\n\n- [x] I've searched existing issues and found nothing related to my issue.\n\n### This feature\n\n- [ ] blocks me from using Bruno\n- [x] would improve my quality of life in Bruno\n- [ ] is something I've never seen an API client do before\n\n### Describe the feature you want to add, and how it would change your usage of Bruno\n\nThis was raised in https://github.com/usebruno/bruno/issues/291 and supposedly added but does not work any longer but was then removed through https://github.com/usebruno/bruno/issues/634.\n\nI would suggest to re-add it but by clicking the tab - that should not clash with any other behavior (?)\n<img width=\"470\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d82ef279-7c1a-4b62-b92e-a2b977bc3c58\" />\n\n### Mockups or Images of the feature\n\n_No response_",
    "state": "closed",
    "comments": 6,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/4815/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/4815/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/4815/events",
    "user_login": "gs11",
    "user_url": "https://github.com/gs11",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 3080219007,
    "number": 4731,
    "html_url": "https://github.com/usebruno/bruno/issues/4731",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-05-21 13:19:12",
    "updated_date": "2025-05-22 11:57:23",
    "resolved_date": "2025-05-22 11:57:21",
    "title": "add bulk edit for header",
    "body": "### I have checked the following:\n\n- [x] I've searched existing issues and found nothing related to my issue.\n\n### This feature\n\n- [ ] blocks me from using Bruno\n- [x] would improve my quality of life in Bruno\n- [ ] is something I've never seen an API client do before\n\n### Describe the feature you want to add, and how it would change your usage of Bruno\n\nHello,\n\ncoming from postman, i found useful to be able to cut/paste huge set of header (coming from elk log for instance) that aren't into any well-known format (ie: not a curl so i can't import directly all the call)\n\nwhat i have in this elastic search log, is a list of header  in standard http format (ie, key:val separated with new line) that i want to add to an existing call\n\nin postman, let me show the screenshot for reference\n\n![Image](https://github.com/user-attachments/assets/1ac50775-71d2-4718-842d-b9dbefe252be)\n\n### Mockups or Images of the feature\n\n_No response_",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/4731/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/4731/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/4731/events",
    "user_login": "matteo-rama",
    "user_url": "https://github.com/matteo-rama",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2976113318,
    "number": 4451,
    "html_url": "https://github.com/usebruno/bruno/issues/4451",
    "type": "issue",
    "labels": "enhancement,can-be-closed",
    "created_date": "2025-04-07 08:51:55",
    "updated_date": "2025-05-31 14:09:34",
    "resolved_date": "2025-05-31 14:09:34",
    "title": "Add support for other Auth types in Folder Authentication",
    "body": "### I have checked the following:\n\n- [x] I've searched existing issues and found nothing related to my issue.\n\n### This feature\n\n- [ ] blocks me from using Bruno\n- [x] would improve my quality of life in Bruno\n- [ ] is something I've never seen an API client do before\n\n### Describe the feature you want to add, and how it would change your usage of Bruno\n\nCurrently you can choose from a variety of auth \"types\" on collection level. It would be awesome if that would be also possible on Folder level Auth which was introduced with 2.0.0\n\n### Mockups or Images of the feature\n\nCurrent options:\n\n![Image](https://github.com/user-attachments/assets/92ec4574-3f1e-4574-b049-c05ebc28ea71)\n\nOptions on Collection level:\n\n![Image](https://github.com/user-attachments/assets/d04ca67c-cd32-45d5-9528-2e636758894d)",
    "state": "closed",
    "comments": 7,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/4451/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/4451/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/4451/events",
    "user_login": "MichaMican",
    "user_url": "https://github.com/MichaMican",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2952677696,
    "number": 4354,
    "html_url": "https://github.com/usebruno/bruno/issues/4354",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-03-27 11:50:24",
    "updated_date": "2025-04-04 14:47:57",
    "resolved_date": "2025-04-04 14:47:57",
    "title": "Highlight matching bracket pairs in request body and response",
    "body": "### I have checked the following:\n\n- [x] I've searched existing issues and found nothing related to my issue.\n\n### This feature\n\n- [ ] blocks me from using Bruno\n- [x] would improve my quality of life in Bruno\n- [ ] is something I've never seen an API client do before\n\n### Describe the feature you want to add, and how it would change your usage of Bruno\n\nHighlight innermost bracket pair based on cursor position, similar to VS Code and many other editors for improved readability in both request body and response. This should be applied for `{}`, `[]`, and `()` and should work if cursor is next to or selecting an opening or closing bracket, as well as if cursor is somewhere inside the bracket pair like in the images below.\n\n### Mockups or Images of the feature\n\nHighlighting in VS Code:\n\n<img width=\"277\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/213c93ba-6925-411c-848f-e505c93128cb\" />\n\nSame cursor position, but without highlighting in Bruno:\n\n<img width=\"233\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ff519e4b-e319-4b01-9231-b170f492d547\" />",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/4354/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/4354/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/4354/events",
    "user_login": "reblex",
    "user_url": "https://github.com/reblex",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2844775477,
    "number": 3992,
    "html_url": "https://github.com/usebruno/bruno/issues/3992",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-02-11 09:17:37",
    "updated_date": "2025-05-07 18:48:50",
    "resolved_date": "2025-04-07 09:31:51",
    "title": "Add possibility to see actual raw body in scripts (req.body.raw)",
    "body": "### I have checked the following:\n\n- [x] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nIn another application (Postman) you can grab the exact body of the request by doing the operation below. But in bruno this is not possible. \n\nThis is causing issues for me because the actual \"rawBody\" sent to API includes characters such as \"\\n\" automatically but I can not access to same data in the bruno pre-request script. I need to access to same data both in API and Bruno to do some operations.\n\n\n\n### Mockups or Images of the feature\n\nFor example in Postman:\n```\n    const rawBody = pm.request.body ? pm.request.body.raw : '';\n    console.log('rawbody',rawBody)\n    data = rawBody ? JSON.stringify(rawBody) : rawBody;\n    console.log('data',data)\n```\nWill return:\n![Image](https://github.com/user-attachments/assets/cd2c4f0c-ce3c-4640-a4df-cc6b315f63c8)\n\nBut in bruno I could not find a way to do the same operation.",
    "state": "closed",
    "comments": 11,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3992/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3992/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3992/events",
    "user_login": "emirozmen07",
    "user_url": "https://github.com/emirozmen07",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 13,
    "total_image_count": 14
  },
  {
    "id": 2779750594,
    "number": 3774,
    "html_url": "https://github.com/usebruno/bruno/issues/3774",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-01-10 09:49:54",
    "updated_date": "2025-01-10 12:49:09",
    "resolved_date": "2025-01-10 12:49:09",
    "title": "Curl Export from request",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nIt would be great to be able to export or copy the request as a **Curl** like **Postman** does .\nIt could be done in the \"**_Timeline_**\" tab.\nThe request detail in green could be written as a Curl command with a button to copy the curl.\n\n\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/1df36b9d-d5d8-485c-8743-bbb3e6244582)\n\n\n### Screenshot Request with Curl format in Postman : \nNote that you can choose the request format in postman :\n![image](https://github.com/user-attachments/assets/7df8c585-f6e6-42a6-8286-153c0c163e2a)\n\n\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3774/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3774/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3774/events",
    "user_login": "jpeyron1",
    "user_url": "https://github.com/jpeyron1",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 1,
    "total_image_count": 3
  },
  {
    "id": 2779710372,
    "number": 3773,
    "html_url": "https://github.com/usebruno/bruno/issues/3773",
    "type": "issue",
    "labels": "enhancement,module-file-naming",
    "created_date": "2025-01-10 09:33:34",
    "updated_date": "2025-04-11 11:29:01",
    "resolved_date": "2025-04-11 11:29:01",
    "title": "Hope 'Request name' can support diagonal lines'/'",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nCan the name of the \"Request name\" in the sidebar support a slash \"/\"; This way, when searching, I can quickly locate my interface\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/c639ace2-9898-4e81-bfbd-fa8f23dcd327)",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3773/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3773/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3773/events",
    "user_login": "isobaric",
    "user_url": "https://github.com/isobaric",
    "assignees": "anusree-bruno",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2776413930,
    "number": 3765,
    "html_url": "https://github.com/usebruno/bruno/issues/3765",
    "type": "issue",
    "labels": "enhancement,short-term-goal",
    "created_date": "2025-01-08 21:49:25",
    "updated_date": "2025-04-19 12:44:46",
    "resolved_date": "2025-04-19 12:44:46",
    "title": "Highlight skipped requests in UI",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nAs mentioned in #2397 it would be great to highlight skipped requests in the UI. The new functionality is cool, but when running many requests, I need to always calculate how many requests were skipped. I would love to see this at a glance. Therefore @JorgeTrovisco implemented some beautiful UI already in #2397 with the feedback of some other users. This keeps the UI more consistent and clean.\n\n### Mockups or Images of the feature\n\n#### Count Skipped requests:\n<img width=\"282\" alt=\"400217775-be246688-4b1b-4914-9c08-296228d1ede2\" src=\"https://github.com/user-attachments/assets/3717910c-ea3d-4283-8a6d-a06e1698476e\" />\n\n\n#### Single Request \n\nInstead of current implementation (which looks too similar to failed requests):\n<img width=\"429\" alt=\"400217605-6311a2be-c3d5-49fc-b483-b9c61916a7d1\" src=\"https://github.com/user-attachments/assets/4baf0aec-3ad9-40c2-b4f1-70b0a9fe4e8d\" />\n\n\nLet's rather implement this:\n<img width=\"173\" alt=\"400217672-a15f61cf-c49c-4bdd-ad57-69e1b501b051\" src=\"https://github.com/user-attachments/assets/22091f0e-3c75-4b94-bdab-af33ebcb61e7\" />\n\n\nImages by @JorgeTrovisco",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3765/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3765/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3765/events",
    "user_login": "nikischin",
    "user_url": "https://github.com/nikischin",
    "assignees": "sreelakshmi-bruno",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 3,
    "comment_image_count": 0,
    "total_image_count": 3
  },
  {
    "id": 2769238654,
    "number": 3730,
    "html_url": "https://github.com/usebruno/bruno/issues/3730",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-01-05 11:54:13",
    "updated_date": "2025-03-13 21:37:52",
    "resolved_date": "2025-03-13 21:37:52",
    "title": "Amend search bar placeholder to make it more expressive",
    "body": "### Description\n\nThe search bar should be changed to reflect that it can search requests. This will help newbies to onboard faster and make the best out of `Bruno`.\n\n### Mockups or Images of the feature\n\n| Before | After |\n|--------|--------|\n| ![Screenshot 2025-01-05 at 12 49 32](https://github.com/user-attachments/assets/bc6333f7-67fd-445c-8348-21e5802693c8) | ![Screenshot 2025-01-05 at 12 49 49](https://github.com/user-attachments/assets/bc00cfb8-8485-4ae8-bb03-739ad15e497e) | ",
    "state": "closed",
    "comments": 0,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3730/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3730/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3730/events",
    "user_login": "hansemannn",
    "user_url": "https://github.com/hansemannn",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2767830837,
    "number": 3729,
    "html_url": "https://github.com/usebruno/bruno/issues/3729",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-01-03 16:15:51",
    "updated_date": "2025-01-13 17:53:27",
    "resolved_date": "2025-01-13 17:53:27",
    "title": "Run only specific folder in collection via Runner feature",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nWould it be possible to improve Runner feature in Bruno to support option to select only specific folder of requests inside main collection?\nI know it is possible via Bruno CLI but it would be great to have it also in Bruno client, especially when the collection is big and includes multiple folders or subfolders and when these folders are not dependant and I would like to check only specific functionality.\n\n### Mockups or Images of the feature\n\nI have attached screenshots from Postman for visiblity what I mean.\n![FolderRunInPostman](https://github.com/user-attachments/assets/e08d39e6-faf8-48b4-8142-5bbf0ab28056)\n![FolderSelectionInCollection](https://github.com/user-attachments/assets/2cc1c442-b451-45d6-88e9-35429a5f3afb)\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3729/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3729/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3729/events",
    "user_login": "RadimBilek",
    "user_url": "https://github.com/RadimBilek",
    "assignees": "sreelakshmi-bruno,naman-bruno",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 1,
    "total_image_count": 3
  },
  {
    "id": 2765021638,
    "number": 3718,
    "html_url": "https://github.com/usebruno/bruno/issues/3718",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-01-01 11:46:06",
    "updated_date": "2025-01-02 09:33:07",
    "resolved_date": "2025-01-02 09:33:06",
    "title": "Sending raw binary file as a request body ",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI would love if it would be possible to add a feature that allows you to send a file as part of a request body on its own not as part of a multipart form on the UI without having to write a custom script\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/64839b1e-29be-4985-ae3e-daf5cd63c9ed)\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3718/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3718/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3718/events",
    "user_login": "Tadiwr",
    "user_url": "https://github.com/Tadiwr",
    "assignees": "sreelakshmi-bruno",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2751434417,
    "number": 3686,
    "html_url": "https://github.com/usebruno/bruno/issues/3686",
    "type": "issue",
    "labels": "enhancement,mid-term-goal,module-performance",
    "created_date": "2024-12-19 21:09:21",
    "updated_date": "2025-04-08 07:48:18",
    "resolved_date": "2025-04-08 07:48:17",
    "title": "Optimizing parsing .bru files while program starts",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI've large collections, about 3,8k files. And each start of program be like: \"launch Bruno and go away...\". In many cases i need just a few specific `reqs`, not all collection.\n\n**I suggest:**\n1. Do not block all interface while files in load, just block top level folders* inside collection if not all inner files (recursively) was loaded.\n2. Unblock top level folders after it was fully loaded, one by one.\n3. Load folder in priority if user clicked on it, then continue load by sequence from top to bottom of folder list.\n4. It may help mitigate this bug https://github.com/usebruno/bruno/issues/2613 if do update states of folders (not recursively) when transfer requests from folder to folder.\n\n**Top level folders means one step after collection level:*\n\n- Collection\n  - folder\n  - folder\n  - folder\n  \nProbably be solved by this pr https://github.com/usebruno/bruno/pull/3618/\n\n### Mockups or Images of the feature\n\n![BrunoFileLoad](https://github.com/user-attachments/assets/266d1b14-bf64-4cc0-807e-9c408a28834e)",
    "state": "closed",
    "comments": 20,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3686/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3686/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3686/events",
    "user_login": "SPIRIT-00",
    "user_url": "https://github.com/SPIRIT-00",
    "assignees": "sreelakshmi-bruno",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 11,
    "total_image_count": 12
  },
  {
    "id": 2739501265,
    "number": 3651,
    "html_url": "https://github.com/usebruno/bruno/issues/3651",
    "type": "issue",
    "labels": "enhancement,short-term-goal,module-file-naming",
    "created_date": "2024-12-14 03:14:53",
    "updated_date": "2025-04-11 11:32:10",
    "resolved_date": "2025-04-11 11:32:10",
    "title": "Support Korean character when importing collection",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI'd like to import Postman collection containing Korean characters\n\n### Mockups or Images of the feature\n\n![20241214-122308+390471392](https://github.com/user-attachments/assets/2c67fc34-5352-450a-86e4-0470d534edea)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3651/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3651/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3651/events",
    "user_login": "crowjdh",
    "user_url": "https://github.com/crowjdh",
    "assignees": "anusree-bruno",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2724547485,
    "number": 3610,
    "html_url": "https://github.com/usebruno/bruno/issues/3610",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-12-07 11:25:51",
    "updated_date": "2025-05-12 11:51:22",
    "resolved_date": "2025-04-02 08:54:31",
    "title": "Add dynamic variable support to bruno",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nSimilar to what postman does \nhttps://learning.postman.com/docs/tests-and-scripts/write-scripts/variables-list/\n\ninterpolating {{$randomInt}} etc.\n\n### Mockups or Images of the feature\n\n<img width=\"1364\" alt=\"Screenshot 2024-12-07 at 6 21 45 AM\" src=\"https://github.com/user-attachments/assets/4b4e31ad-d264-41a2-a3fe-5871d3f0d81f\">\n",
    "state": "closed",
    "comments": 11,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3610/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3610/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3610/events",
    "user_login": "rsxc",
    "user_url": "https://github.com/rsxc",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 5,
    "total_image_count": 6
  },
  {
    "id": 2690139064,
    "number": 3541,
    "html_url": "https://github.com/usebruno/bruno/issues/3541",
    "type": "issue",
    "labels": "enhancement,mid-term-goal,module-qol",
    "created_date": "2024-11-25 10:21:09",
    "updated_date": "2025-01-29 07:12:14",
    "resolved_date": "2025-01-29 05:48:58",
    "title": "Add Reveal in Finder/Explorer when right-clicking request/folder",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nWhen right-clicking a request or folder in Bruno, an option to **Reveal in Finder/Explorer** would be very handy. Just like in VS Code.\n\n### Mockups or Images of the feature\n\n![Reveal](https://github.com/user-attachments/assets/0e087c51-97d3-48e5-9529-f55bcdbd876a)\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3541/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3541/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3541/events",
    "user_login": "fantpmas",
    "user_url": "https://github.com/fantpmas",
    "assignees": "sreelakshmi-bruno",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2651922441,
    "number": 3470,
    "html_url": "https://github.com/usebruno/bruno/issues/3470",
    "type": "issue",
    "labels": "enhancement,mid-term-goal,module-oauth2,module-console",
    "created_date": "2024-11-12 11:33:28",
    "updated_date": "2025-05-13 14:09:11",
    "resolved_date": "2025-04-03 15:14:45",
    "title": "Show all requests performed for OAuth 2.0 login",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI love using Bruno, especially for its built-in OAuth Login Flow, which greatly simplifies the Authorization Code Flow. However, there are some limitations that affect its effectiveness, particularly for learning and debugging.\n\n**Problem**\n\nThe current communication process between the client and server lacks transparency, making Bruno less suitable for educational purposes and complicating debugging. Specifically:\n\t- In the Timeline tab, only the /token request is displayed, and all preceding requests and responses are missing.\n\t- The Network tab in the developer tools does not show any requests, which might be related to Issue 983.\n\n**Proposed Solution**\n-Display all requests related to the OAuth Authorization Code Flow, either in the Network tab or in the Timeline.\n- Ensure visibility of both frontchannel and backchannel communications.\n- Implementing this feature would greatly enhance Bruno’s capabilities as a debugging and learning tool.\n\nThank you for considering this request!\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/10894b5b-6159-41e9-8980-a1e0a59ab7dd)\n",
    "state": "closed",
    "comments": 6,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3470/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3470/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3470/events",
    "user_login": "MartinKvL",
    "user_url": "https://github.com/MartinKvL",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 2,
    "total_image_count": 3
  },
  {
    "id": 2618563881,
    "number": 3378,
    "html_url": "https://github.com/usebruno/bruno/issues/3378",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-10-28 14:16:56",
    "updated_date": "2024-10-28 21:07:46",
    "resolved_date": "2024-10-28 21:07:46",
    "title": "⭐️Golden Edition - Restore \"Download Report\" Button in Collection Runner",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nIn the latest Bruno release, the \"Download Report\" button in the Collection Runner is now limited to the Ultimate Edition. Previously, this feature was accessible in the Golden Edition, which was one of the main reasons I chose to support Bruno by purchasing this edition.\n\nThis change feels unexpected and disappointing, as it impacts the usability and value I associated with the Golden Edition. I would like to request that this feature be restored for Golden Edition users.\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/c47295e0-a464-44a8-90f3-be390394e236)\n\n# Sample of the report I used to get\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3378/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3378/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3378/events",
    "user_login": "swagfin",
    "user_url": "https://github.com/swagfin",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2613942826,
    "number": 3360,
    "html_url": "https://github.com/usebruno/bruno/issues/3360",
    "type": "issue",
    "labels": "enhancement,short-term-goal,module-oauth2",
    "created_date": "2024-10-25 12:14:53",
    "updated_date": "2025-04-03 15:09:23",
    "resolved_date": "2025-04-03 15:09:22",
    "title": "Running a request with OAuth2 configured show the result of the OAuth2 request instead of the result of the request itself",
    "body": "### I have checked the following:\n\n- [X] I use the newest version of bruno.\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the bug\n\nI use Bruno to send requests on API protected with OAuth2.\nWhen I use directly the Bearer token, I run the request and I get the right response.\nWhen I configure OAuth2, I run the request and I get only the response from the OAuth2 server (with the token and the scopes).\n\n### .bru file to reproduce the bug\n\n_No response_\n\n### Screenshots/Live demo link\n\nOK Case using the bearer token, the response is correct\n![OK_case](https://github.com/user-attachments/assets/c6206824-08cb-4a98-87ae-41339b2a3b42)\nBuggy case using OAuth2, see that the response contains an access_token, the structure is not the expected one.\nClicking on \"Get Access Token\" or the right arrow on top right to send the request does the same.\n![KO_case](https://github.com/user-attachments/assets/deec1ee3-bc1b-492a-9b85-2924026c239a)\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3360/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3360/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3360/events",
    "user_login": "Oznup",
    "user_url": "https://github.com/Oznup",
    "assignees": "lohxt1",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2572777685,
    "number": 3265,
    "html_url": "https://github.com/usebruno/bruno/issues/3265",
    "type": "issue",
    "labels": "enhancement,short-term-goal,module-preferences",
    "created_date": "2024-10-08 10:29:28",
    "updated_date": "2024-11-21 10:18:33",
    "resolved_date": "2024-11-21 10:18:33",
    "title": "Secret Variables Exposed on Hover Over Request Components",
    "body": "When hovering over a {{variable}} that is set as a secret value, the secret is currently displayed in the editor component. It would be better to show asterisks (***) in the hover text instead of revealing the secret value.\n\n![image](https://github.com/usebruno/bruno/assets/1887439/d6557ed0-3114-42a7-8296-fb4f1676c20a)\n\n_Originally posted by @JaceyPenny in https://github.com/usebruno/bruno/issues/1646#issuecomment-1989065065_\n            ",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3265/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3265/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3265/events",
    "user_login": "Pragadesh-45",
    "user_url": "https://github.com/Pragadesh-45",
    "assignees": "Pragadesh-45",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2551687176,
    "number": 3207,
    "html_url": "https://github.com/usebruno/bruno/issues/3207",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-09-26 23:25:33",
    "updated_date": "2024-10-13 02:58:39",
    "resolved_date": "2024-10-13 02:58:39",
    "title": "Global variables (inter-collections variables)",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI have a collection dedicated to generating some authentication Access Tokens in a very specific way. In the \"Post Response\" script of a request in that collection, I set an \"accessToken\" variable:\n\n`bru.setVar('accessToken', [taken from the response object]);`\n\nI'd like to be able to then use this \"{{accessToken}}\" variable in _other_ collections!\n\nIn Postman, it's possible to use:\n\n`postman.setGlobalVariable('accessToken', [taken from the response object]);`\n\n... so the variable is available to all collections. \n\nIs there something similar in Bruno?\n\n\n\n### Mockups or Images of the feature\n\n![Screenshot_20240926_192436](https://github.com/user-attachments/assets/fc075fe0-f1e1-413b-af15-34814dcbae3a)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3207/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3207/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3207/events",
    "user_login": "electrotype",
    "user_url": "https://github.com/electrotype",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2544059633,
    "number": 3182,
    "html_url": "https://github.com/usebruno/bruno/issues/3182",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-09-24 01:20:30",
    "updated_date": "2024-10-18 05:09:19",
    "resolved_date": "2024-09-24 05:20:39",
    "title": "Make send button bigger",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nSend button is super small and not comfortable to work with.\nMake it larger and give some sort of colour to it instead of existing small arrow\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/30f91c9b-a9dc-4bec-aa83-990d4494ae72)\njust make it like a postman's SEND button with any colour u like, e.g. orange",
    "state": "closed",
    "comments": 5,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3182/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3182/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3182/events",
    "user_login": "Envoy49",
    "user_url": "https://github.com/Envoy49",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2540801850,
    "number": 3162,
    "html_url": "https://github.com/usebruno/bruno/issues/3162",
    "type": "issue",
    "labels": "enhancement,mid-term-goal,onboarding,compatibility",
    "created_date": "2024-09-22 08:07:59",
    "updated_date": "2024-12-01 12:17:52",
    "resolved_date": "2024-12-01 12:17:52",
    "title": "Support importing from thunder client json file ",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI've been using the Thunder Client extension for a while, but now I'm switching to Brono. However, I'm encountering issues when trying to import my Thunder Client collection into Brono. \n\nI attempted to convert the Thunder Client collection to a Postman collection and then import the converted collection into Brono, but it didn't work. Is there a way to support importing from the Thunder Client JSON file?\n\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/2aa72651-2fa7-475f-b8cd-2e33397bbf28)\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3162/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3162/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3162/events",
    "user_login": "issam-seghir",
    "user_url": "https://github.com/issam-seghir",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2526531110,
    "number": 3104,
    "html_url": "https://github.com/usebruno/bruno/issues/3104",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-09-14 17:32:21",
    "updated_date": "2024-09-26 10:42:20",
    "resolved_date": "2024-09-26 10:42:20",
    "title": "Detection for runner in script",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nAs mentioned in #2397 I would like to have a possibility to determine wether the current request is triggered by a runner or as a single request. This will be beneficial especially when using with #2116 and a skip request function.\n\nUsage is like this\n`bru.isRunner()`\n\nReturns either **true** or **false** \n\n### Mockups or Images of the feature\n\n<img width=\"656\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b72dad53-f2c8-453a-bad1-860ac2841b88\">\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3104/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3104/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3104/events",
    "user_login": "nikischin",
    "user_url": "https://github.com/nikischin",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2524557549,
    "number": 3089,
    "html_url": "https://github.com/usebruno/bruno/issues/3089",
    "type": "issue",
    "labels": "enhancement,long-term-goal,module-qol",
    "created_date": "2024-09-13 11:03:59",
    "updated_date": "2025-03-04 09:58:59",
    "resolved_date": "2025-03-04 09:57:35",
    "title": "Show body by default when it makes sense",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nIf I open a request that has no params defined but has a body (e.g. a JSON POST), it would be nice to show the \"body\" tab by default instead of opening the \"params\" tabs as usual.\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/dae41436-da27-4b52-bf2a-706eca02e243)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3089/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3089/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3089/events",
    "user_login": "lapo-luchini",
    "user_url": "https://github.com/lapo-luchini",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2518949993,
    "number": 3063,
    "html_url": "https://github.com/usebruno/bruno/issues/3063",
    "type": "issue",
    "labels": "enhancement,mid-term-goal,module-request",
    "created_date": "2024-09-11 08:16:10",
    "updated_date": "2024-12-27 09:02:49",
    "resolved_date": "2024-12-27 09:02:48",
    "title": "how to set content type for\"multipart form\" in body??",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nhow to set content type for\"multipart form\" in body??\ni want to include both a multipart file and a json data in one request, but it will say\"Content type 'application/octet-stream' not supported\"\nFrom what i saw on the Internet,this error may be sovled by setting the content type of json data as\"application/problem+json\",but I cannot find this option in Bruno.\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/15b8d3b9-88ba-4c31-8050-1947cdfb1632)\n![image](https://github.com/user-attachments/assets/21783370-c9f1-422e-bee6-ddd82ad7e1bf)\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3063/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3063/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3063/events",
    "user_login": "KianaMei",
    "user_url": "https://github.com/KianaMei",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2505530349,
    "number": 3026,
    "html_url": "https://github.com/usebruno/bruno/issues/3026",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-09-04 14:26:45",
    "updated_date": "2024-10-30 21:01:53",
    "resolved_date": "2024-10-23 13:57:45",
    "title": "Color in json response folded",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nPossibility to change color of folded response or remove shadow to improve visualization.\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/47d53d3b-7d2f-47e6-b7a5-09d437aa95e6)\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/3026/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/3026/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/3026/events",
    "user_login": "leandrohago",
    "user_url": "https://github.com/leandrohago",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2499952463,
    "number": 2990,
    "html_url": "https://github.com/usebruno/bruno/issues/2990",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-09-02 04:07:55",
    "updated_date": "2024-09-15 18:43:11",
    "resolved_date": "2024-09-15 18:36:07",
    "title": "Support more languages in Generate Code",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nSince I usually work on Java projects, I want to generate Java code from the collections.\nThen I checked `httpsnippet`, the library Bruno is using to generate code snippets, and saw that it supports more languages than the current ones.\nPerhaps there should be a way to show all languages from `httpsnippet` in Bruno so that I can generate code snippets in any language `httpsnippet` supports.\n\n### Mockups or Images of the feature\n\n![Screenshot_20240902_110210](https://github.com/user-attachments/assets/9301a8f0-f905-4351-ba01-8053180b9729)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2990/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2990/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2990/events",
    "user_login": "HSGamer",
    "user_url": "https://github.com/HSGamer",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2497285523,
    "number": 2981,
    "html_url": "https://github.com/usebruno/bruno/issues/2981",
    "type": "issue",
    "labels": "enhancement,mid-term-goal,module-qol",
    "created_date": "2024-08-30 13:42:54",
    "updated_date": "2025-01-13 13:08:48",
    "resolved_date": "2025-01-13 13:06:10",
    "title": "Display Variables in alphabetical order",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nWorking with many variables, the variables view can get messy quickly. In order to keep the variables view more structured, variables will be displayed in alphabetical order. This ensures you can easily find a variable value you are looking for.\n\n\n### Mockups or Images of the feature\n\n<img width=\"326\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6ed819b8-8479-4800-9f88-28cbc8d27256\">\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2981/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2981/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2981/events",
    "user_login": "nikischin",
    "user_url": "https://github.com/nikischin",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2497213473,
    "number": 2980,
    "html_url": "https://github.com/usebruno/bruno/issues/2980",
    "type": "issue",
    "labels": "enhancement,short-term-goal,module-oauth2",
    "created_date": "2024-08-30 13:15:18",
    "updated_date": "2025-04-03 15:04:20",
    "resolved_date": "2025-04-03 15:03:00",
    "title": "Oauth 2.0 flow on collection",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI think after sucessfully autheticating using oauth2 in a collection requests inheriting auth from the collection should automatically set auth header with the token from the collection. i believe postman does this way\n\nAlternatively we could have 'post auth script' that runs after auth collection. Scripts in collections run after every request inside collection. What i propose is have a script run after auth. We could use that to set a token variable that would be used by requests inside\n\nPS: forgive my english. Not a native speaker\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/9ea7d527-5ffe-4756-a367-7cb4c3338607)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2980/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2980/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2980/events",
    "user_login": "thisisleobro",
    "user_url": "https://github.com/thisisleobro",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2470505094,
    "number": 2850,
    "html_url": "https://github.com/usebruno/bruno/issues/2850",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-08-16 15:36:41",
    "updated_date": "2024-08-16 15:42:28",
    "resolved_date": "2024-08-16 15:42:11",
    "title": "Query field in graphql requests doens't take full height",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nThe query field in a gql request is not taking the full screen height as the body field does in a rest request. It would be great to make it resizable or at least take the full screen height. \n\n### Mockups or Images of the feature\n\n## This is how it looks\n![image](https://github.com/user-attachments/assets/39e4e5de-5b1a-4cae-86a8-c3ea33e901cc)\n\n## This is how it should look (variables field)\n![image](https://github.com/user-attachments/assets/2575ced9-040b-4efb-89c5-a93f98565f15)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2850/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2850/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2850/events",
    "user_login": "felipeospina21",
    "user_url": "https://github.com/felipeospina21",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2459609575,
    "number": 2807,
    "html_url": "https://github.com/usebruno/bruno/issues/2807",
    "type": "issue",
    "labels": "enhancement,mid-term-goal",
    "created_date": "2024-08-11 14:07:44",
    "updated_date": "2025-05-28 07:07:07",
    "resolved_date": "2025-05-28 07:07:07",
    "title": "Javscript Sandbox: Safe Mode",
    "body": "### Overview\nBruno supports execution of JavaScript code in Variables, Scripts, Tests, and Assertions.\nToday, we use [vm2](https://www.npmjs.com/package/vm2) to execute javascript.\n\nThis approach however allows the code execute system commands, access the file system and this is a security risk.\n\nMost collections do not need to execute system commands or access the file system.\n\nWe are introducing `Safe Mode` to execute JavaScript code in a secure sandbox environment using [isolated-vm](https://github.com/laverdet/isolated-vm)\nThe user can switch to `Developer Mode` if the collection needs access to the file system or system commands, provided the user is aware of the security risks and trusts the source of the collection.\n\n### Mockup\n\n<img width=\"1102\" alt=\"image\" src=\"https://github.com/user-attachments/assets/bcc7a7bd-e973-4ff4-b5f1-6bfeaca4e17e\">\n",
    "state": "closed",
    "comments": 6,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2807/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2807/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2807/events",
    "user_login": "helloanoop",
    "user_url": "https://github.com/helloanoop",
    "assignees": "anusree-bruno",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2454899551,
    "number": 2779,
    "html_url": "https://github.com/usebruno/bruno/issues/2779",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-08-08 05:26:51",
    "updated_date": "2024-08-08 10:18:55",
    "resolved_date": "2024-08-08 10:18:55",
    "title": "UX Improvements",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nIn Bruno, from creating collections and requests to cloning them and setting up environments, we have many text input boxes that currently lack placeholders. Can we address this by adding placeholders to every input field? Additionally, the location chooser appears as a text field but is clickable and redirects to a folder selection dialog. We should improve this as well, by giving an intimation to the user.\n\n### Mockups or Images of the feature\n\n\nNow, its looking like this:\n\n![image](https://github.com/user-attachments/assets/7e30e6a9-ec02-4899-ad79-47cb6635727d)\n\n\nWe can introduce like this:\n\n![image](https://github.com/user-attachments/assets/bd94b27c-bc61-4554-80d6-a3cec4cf8119)\n",
    "state": "closed",
    "comments": 0,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2779/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2779/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2779/events",
    "user_login": "Pragadesh-45",
    "user_url": "https://github.com/Pragadesh-45",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2447994337,
    "number": 2757,
    "html_url": "https://github.com/usebruno/bruno/issues/2757",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-08-05 08:55:00",
    "updated_date": "2024-08-19 14:25:09",
    "resolved_date": "2024-08-19 13:07:49",
    "title": "UX: Visualize if request body is provided",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI would like to have some indicator that request body is filled in request.\nNow Params and Headers have counter if they are added, but Body have no indication at all that it's filled.\nEven simple dot would be nice.\n\n### Mockups or Images of the feature\n\n![image](https://github.com/user-attachments/assets/ea1d0bf4-419d-4412-a319-7438fdb04853)\n![image](https://github.com/user-attachments/assets/05d10ff8-d346-41c1-875f-77466e640f56)\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2757/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2757/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2757/events",
    "user_login": "matrixik",
    "user_url": "https://github.com/matrixik",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 1,
    "total_image_count": 3
  },
  {
    "id": 2444460319,
    "number": 2747,
    "html_url": "https://github.com/usebruno/bruno/issues/2747",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-08-02 09:02:49",
    "updated_date": "2024-08-06 06:13:26",
    "resolved_date": "2024-08-06 06:13:26",
    "title": "Add a show/hide privacy toggle to passwords and secrets in Auth options",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\n**User story**\n\nAs a user I want my authentication password/secrets to be hidden by default and visible if I choose to reveal them.\n\n**The use case/reason**\n\nI work on a system where we have to be pretty careful with credentials, I was screen sharing with other developers while trying to make an authenticated API call from Bruno but I couldn't have the password on the screen share at any time.  I ended up setting up the request without the password, disconnecting the screen share, entering the password, making the request, removing the password, starting the screen share again.  I had to do that cycle multiple times which got quite frustrating.\n\n**Related PRs**\n\n - [Adding a privacy toggle to proxy settings](https://github.com/usebruno/bruno/pull/2127) - the same privacy toggle should be used\n - [Masking support for SingleLIneEditor](https://github.com/usebruno/bruno/pull/2240) - this isn't merged yet but it implements the functionality needed on the element that's used for Auth settings\n\n### Mockups or Images of the feature\n\n<img width=\"361\" alt=\"Screenshot 2024-08-02 at 10 02 09\" src=\"https://github.com/user-attachments/assets/0bc8cafa-7d11-4f8a-ae5d-ae9990728292\">\n<img width=\"368\" alt=\"Screenshot 2024-08-02 at 10 02 16\" src=\"https://github.com/user-attachments/assets/96de28e7-c118-4bea-98aa-320e1bd7fe7a\">\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2747/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2747/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2747/events",
    "user_login": "nataliecarey",
    "user_url": "https://github.com/nataliecarey",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2442988819,
    "number": 2743,
    "html_url": "https://github.com/usebruno/bruno/issues/2743",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-08-01 17:25:56",
    "updated_date": "2024-08-02 05:58:14",
    "resolved_date": "2024-08-02 05:58:13",
    "title": "Search Bar Encounters Counter",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nWhen you search in the Response Box there is no counter for how many elements were found and on which one you are. I am looking for something like Chrome's search, where you see how far you are to the end of the document.\n\n### Mockups or Images of the feature\n\n<img width=\"2358\" alt=\"Screenshot 2024-08-01 at 20 25 43\" src=\"https://github.com/user-attachments/assets/5fbfd22c-e221-42c8-af7c-9faddbd03b3b\">\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2743/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2743/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2743/events",
    "user_login": "denismihaylovsap",
    "user_url": "https://github.com/denismihaylovsap",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2430811750,
    "number": 2703,
    "html_url": "https://github.com/usebruno/bruno/issues/2703",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-07-25 19:09:12",
    "updated_date": "2024-07-26 06:16:30",
    "resolved_date": "2024-07-26 06:16:29",
    "title": "Add color coding for environment",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nIt would be convenient to have an optional color attribute for each environment to color-code environment selected so user can see which environment they work with at this moment also by color of selection dropdown\n\n### Mockups or Images of the feature\n\n![env_dev](https://github.com/user-attachments/assets/e7405a24-a998-4d01-98ad-8981afd74fe5)\n![env_prod](https://github.com/user-attachments/assets/cc4583fa-7b48-4b55-8d58-f065ae8b2415)\n\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2703/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2703/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2703/events",
    "user_login": "SZubarev",
    "user_url": "https://github.com/SZubarev",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2428952967,
    "number": 2700,
    "html_url": "https://github.com/usebruno/bruno/issues/2700",
    "type": "issue",
    "labels": "enhancement,short-term-goal,module-request",
    "created_date": "2024-07-25 04:16:44",
    "updated_date": "2025-02-21 06:03:59",
    "resolved_date": "2025-02-21 06:03:59",
    "title": "Allow users to upload a raw file as the request body",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nHi, I recently moved from Postman to Bruno and noticed one of the features that was missing is the ability to upload a file as the request body. Having an ability for the user to select raw file as the body then a button that allows the user to pick a file to use would be helpful. I am currently using the fs and path npm packages in the script tab to fullfill this use case but think this feature would make Bruno easier to use. Thanks.\n\nI checked to see if this Issue is already open and didn't find anything but please close if this is already open.\n\n### Mockups or Images of the feature\n\n![Screenshot 2024-07-24 220624](https://github.com/user-attachments/assets/e4a61438-e8ca-4c3e-80ca-dc24970a2328)\n![Screenshot 2024-07-24 220851](https://github.com/user-attachments/assets/39893355-9914-4942-8a3c-daef7fbd00f9)\n\nPlease find these images to support the feature.",
    "state": "closed",
    "comments": 11,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2700/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2700/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2700/events",
    "user_login": "zachary-berdell-elliott",
    "user_url": "https://github.com/zachary-berdell-elliott",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 5,
    "total_image_count": 7
  },
  {
    "id": 2427046962,
    "number": 2695,
    "html_url": "https://github.com/usebruno/bruno/issues/2695",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-07-24 09:26:39",
    "updated_date": "2024-07-25 05:07:52",
    "resolved_date": "2024-07-25 05:07:52",
    "title": "Have an option to disable a request",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nIs it possible to add a function disable/enable on a request?\nThis would make it possible to play a collection by excluding requests.\nSoapUI allows this, and it's very practical.\nIf the request is disabled, she is not run.\n\n### Mockups or Images of the feature\n\n![Nouveau projet](https://github.com/user-attachments/assets/4c21c3a3-52f4-47ec-b1c7-b1846277b3c5)\n![SCR-20240724-ft0](https://github.com/user-attachments/assets/9e09f438-4fd5-4e2e-8964-14c72922758c)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2695/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2695/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2695/events",
    "user_login": "Fabw0rk",
    "user_url": "https://github.com/Fabw0rk",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2423638504,
    "number": 2684,
    "html_url": "https://github.com/usebruno/bruno/issues/2684",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-07-22 19:41:46",
    "updated_date": "2024-07-24 14:58:24",
    "resolved_date": "2024-07-24 14:58:24",
    "title": "New Feat: Copy & Paste / Import & Export Button For Headers and Params",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nA nice quality of life feature be a copy and past button for request headers and params. Currently for each request if it has the same fields of another you need to individually copy and past the name value pairs separately. Having a simple copy and past button would be just a quality of life feature reducing the number of clicks and button presses needed when making new but similar request files. \n\n### Mockups or Images of the feature\n\n<img width=\"465\" alt=\"Screenshot 2024-07-22 at 12 35 00 PM\" src=\"https://github.com/user-attachments/assets/3ee91aff-45bd-4df1-895c-d1700655713f\">\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2684/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2684/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2684/events",
    "user_login": "Bervenia",
    "user_url": "https://github.com/Bervenia",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2421390750,
    "number": 2675,
    "html_url": "https://github.com/usebruno/bruno/issues/2675",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-07-21 12:53:17",
    "updated_date": "2024-07-22 09:43:01",
    "resolved_date": "2024-07-22 09:43:01",
    "title": "Provide a setting to disable automatic startup of Bruno app",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nAfter installation, Bruno desktop app automatically starts up on every login, at least on macOS, where I'm using it. It also doesn't provide a setting to turn off that behavior and it doesn't register itself in Login Items in macOS settings, allowing the user to do it there.\n\nThis behavior is quite annoying, as it slows down the OS startup and consume resources each time, even when the user doesn't need to use Bruno in the current session.\n\nThere should be a setting allowing turning that behavior off and ideally set to off by default.\n\n### Mockups or Images of the feature\n\nAdding a checkbox to General Settings sounds like a perfect place for it.\n\n<img width=\"389\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a11aa03a-4a80-4032-bd7c-0dbdb14575b2\">\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2675/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2675/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2675/events",
    "user_login": "szafranek",
    "user_url": "https://github.com/szafranek",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2410547816,
    "number": 2647,
    "html_url": "https://github.com/usebruno/bruno/issues/2647",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-07-16 08:31:22",
    "updated_date": "2024-07-16 09:12:13",
    "resolved_date": "2024-07-16 09:03:22",
    "title": "Get request name in script",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI want to do something like the following in a pre request script:\n\n`req.body.type = req.name`\n\nWhere req.name is the name of the request in the Bruno UI.\n\nThe reason is that I'm working with an API where all requests must specify the request name in the request body. All requests are made to the same URL. This would allow me to specify the request name once, in the Bruno UI, and have it automatically included in the request.\n\n### Mockups or Images of the feature\n\nThis is what I need to do currently:\n![image](https://github.com/user-attachments/assets/80ae35b9-abb2-4815-910e-e9515a69f5a5)\n\nI want to be able to do this:\n![image](https://github.com/user-attachments/assets/5c545067-12d9-4882-b8dc-7035bd6ea366)\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2647/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2647/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2647/events",
    "user_login": "lrpe",
    "user_url": "https://github.com/lrpe",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2408039043,
    "number": 2639,
    "html_url": "https://github.com/usebruno/bruno/issues/2639",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-07-15 07:20:00",
    "updated_date": "2024-07-30 04:57:01",
    "resolved_date": "2024-07-30 04:56:41",
    "title": "Sequential Flow in Script Execution",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\n## Background\nBy default Bruno uses sandwich flow while executing collection-folder-request scripts\n\n## Feature Request\nAllow UI and CLI Toggles to use sequential flow for script order execution.\n\nIf you feel this feature is needed, please upvote and share your use case that will better help us prioritise and implement this feature.\n\n### Mockups or Images of the feature\n\n<img width=\"880\" alt=\"image\" src=\"https://github.com/user-attachments/assets/10cae459-2e31-4fe7-9321-703b4f194170\">\n",
    "state": "closed",
    "comments": 4,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2639/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2639/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2639/events",
    "user_login": "helloanoop",
    "user_url": "https://github.com/helloanoop",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2407333325,
    "number": 2636,
    "html_url": "https://github.com/usebruno/bruno/issues/2636",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-07-14 08:49:29",
    "updated_date": "2024-10-27 22:39:25",
    "resolved_date": "2024-10-27 22:39:25",
    "title": "Show indicator whether a script is present",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nWhen editing a request, the tabs _Query_, _Headers_, _Vars_ and _Asserts_ show an indicator when any values are set.\nThe Tabs _Body_, _Auth_, _**Script**_ and _Docs_ don't show an indicator.\n\nEspecially for scripts, this is kind of dangerous when the collections is used by a colleague that was not the author of that request - he might expect that the shown response is the 1:1 plain answer from the webserver and is not aware, that a \"Post response\" script did modifications.\n\nSo I would suggest to show an asterisk in case values have been applied to the mentioned tabs.\n\nTHANK YOU!\n\n### Mockups or Images of the feature\n\n![feature](https://github.com/user-attachments/assets/e72cb381-afa9-4ae9-b4a8-a87cad026d12)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2636/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2636/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2636/events",
    "user_login": "ihgitigit",
    "user_url": "https://github.com/ihgitigit",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2403430336,
    "number": 2626,
    "html_url": "https://github.com/usebruno/bruno/issues/2626",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-07-11 15:06:14",
    "updated_date": "2024-10-27 22:19:13",
    "resolved_date": "2024-10-27 22:19:13",
    "title": "Introduce formatter and linter for app",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nThe built-in nextjs formatter and linter is not strong enough to figure out errors in reactjs. Introduce biome and vscode settings. \n\n**why biome?**\nIt's a fast all in one formatter and linter pacakge\n\n**why vscode settings?**\nfor frontend development mostly opted editor is vscode, hence it make sense to write .vscode settings to have biome as default formatternext\n\n### Mockups or Images of the feature\n\n**with biome** \n<img width=\"1352\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/29778698/91a65653-74e2-475a-9134-11ebcc99fd5b\">\n\n**without biome**\n<img width=\"1352\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/29778698/16e85331-9bb8-459a-8431-8cab3ab07e4a\">\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2626/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2626/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2626/events",
    "user_login": "shrilakshmishastry",
    "user_url": "https://github.com/shrilakshmishastry",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2386174368,
    "number": 2546,
    "html_url": "https://github.com/usebruno/bruno/issues/2546",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-07-02 12:50:51",
    "updated_date": "2024-08-02 05:51:50",
    "resolved_date": "2024-08-02 05:51:50",
    "title": "It should be possible to see the number of the elements when searched in the response message",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nWhen we search in the response data section, being able to see the number of the elements that matches to the search would be great. Also we could see the index of the current element. Potentially, it can also be added to other sections of the app where we are able to search.\n\n### Mockups or Images of the feature\n\n![image](https://github.com/usebruno/bruno/assets/144101618/2af5e85d-7ca6-45c8-9be0-98f695b58a5e)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2546/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2546/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2546/events",
    "user_login": "emirozmen07",
    "user_url": "https://github.com/emirozmen07",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2356830764,
    "number": 2464,
    "html_url": "https://github.com/usebruno/bruno/issues/2464",
    "type": "issue",
    "labels": "enhancement,module-scripting,can-be-closed",
    "created_date": "2024-06-17 09:14:41",
    "updated_date": "2024-12-30 08:05:59",
    "resolved_date": "2024-12-30 08:05:58",
    "title": "[Feature] Add command bru.rmVar(varType, key) and/or bru.rmEnvVar(key)",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nAdd a command **bru.rmVar(varType, key)** that would allow users to unset a variable (equivalent of **pm.environment.unset** but more modular)\nJavascript behavior (can be done in scripts tab) :\n_replace \"toDelete\" with the key to delete, and \"envVariables\" by another varType_\n```js\nbru = Object.entries(bru).reduce((acc, [key, value]) => {\n  acc[key] = key === \"envVariables\" ?\n    Object.fromEntries(Object.entries(value).filter(([k]) => k !== \"toDelete\")) :\n    value;\n  return acc;\n}, {});\n```\n\n### Mockups or Images of the feature\n\n<img width=\"496\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/64689165/6fba85c8-3dd6-487e-ae2d-3ebf26f9c85c\">\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2464/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2464/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2464/events",
    "user_login": "bpoulaindev",
    "user_url": "https://github.com/bpoulaindev",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2345734673,
    "number": 2437,
    "html_url": "https://github.com/usebruno/bruno/issues/2437",
    "type": "issue",
    "labels": "enhancement,mid-term-goal,short-term-goal,module-oauth2",
    "created_date": "2024-06-11 08:24:04",
    "updated_date": "2025-04-09 16:52:05",
    "resolved_date": "2025-04-03 14:48:26",
    "title": "Automatic refresh of a OAuth2+PKCE token",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nHi\nI have set up an OAuth2 + PKCE in Auth tab of a collection.\nThe requests in the collection are configured with \"inherit\".\nAs the token is valid only for a short amount of time, it needs to be refreshed before sending a new request.\nCurrently it's done  manually by clicking on \"get access token\" in Collection Auth tab.\nI didn't find a way to automatize it in pre-request script.\nIt will be great if this action is automatically executed each time a request is sent and the token is expired.\n\n### Mockups or Images of the feature\n\n![Capture d’écran du 2024-06-11 10-21-25](https://github.com/usebruno/bruno/assets/81041972/807a7df9-3d20-4d0e-9b64-563fef89ebda)\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2437/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2437/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2437/events",
    "user_login": "NjbBzz",
    "user_url": "https://github.com/NjbBzz",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2333995242,
    "number": 2414,
    "html_url": "https://github.com/usebruno/bruno/issues/2414",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-06-04 17:05:45",
    "updated_date": "2024-06-19 10:34:58",
    "resolved_date": "2024-06-19 10:34:58",
    "title": "Add a new Assert : isArray",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nAdd a new Assert : isArray to state if a tag is actually an array\n\n### Mockups or Images of the feature\n\n<img width=\"185\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/811941/d36dfe94-b700-4ff9-9afc-17be4afb84b8\">\n\nAdd a new item in this enum",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2414/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2414/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2414/events",
    "user_login": "fgrande",
    "user_url": "https://github.com/fgrande",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2317316880,
    "number": 2364,
    "html_url": "https://github.com/usebruno/bruno/issues/2364",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-05-25 23:50:34",
    "updated_date": "2024-07-15 19:21:42",
    "resolved_date": "2024-05-25 23:55:23",
    "title": "OAuth 2.0 support for \"state\" parameter",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI'm connecting to an OAuth 2.0 authenticated api that requires \"state\" parameter to be specified. I'm sure there are other services that require the state parameter, but the specific service I'm having trouble with is Quickbooks Online (by Intuit). Quickbooks has relatively clear instructions on [how to setup the oath 2.0 authorization here](https://developer.intuit.com/app/developer/qbo/docs/develop/sandboxes/postman), although these instructions are specifically for Postman. I was able to get it to work in Postman without problem. However, in Bruno I entered all the same configurations fields except that the \"State\" field does not exist in Bruno. And when I attempt to get access token in Bruno the Quickbooks screen pops up, I login and then it gives me an error \"The state query parameter is missing.\"\n\n<img width=\"603\" alt=\"Screenshot 2024-05-25 at 17 27 48\" src=\"https://github.com/usebruno/bruno/assets/84192248/bb9de561-514c-48e3-8042-afe4f44b82d0\">\n\nWould it be possible to add \"state\" in the OAuth 2.0 screen?\n\n### Mockups or Images of the feature\n\nIn terms of UI, here is what I am suggesting.\n<img width=\"553\" alt=\"Screenshot 2024-05-25 at 17 42 28\" src=\"https://github.com/usebruno/bruno/assets/84192248/0ebb8317-cc44-438a-b8fd-e7e2f8574582\">\n\nI'm not expert on this topic, but I did find some documentation about Google's oath 2.0 implementation that also specifies information about the \"state\" field here: https://developers.google.com/identity/openid-connect/openid-connect?hl=en. Apparently one purpose of this field is to protect against xsrf.",
    "state": "closed",
    "comments": 5,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2364/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2364/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2364/events",
    "user_login": "shaunek-hero",
    "user_url": "https://github.com/shaunek-hero",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2310268473,
    "number": 2350,
    "html_url": "https://github.com/usebruno/bruno/issues/2350",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-05-22 11:17:23",
    "updated_date": "2024-08-23 19:34:24",
    "resolved_date": "2024-08-23 19:34:24",
    "title": "Support relative local image path in markdown for docs.  ",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nCurrently, an absolute path of an image on the local filesystem can be resolved within the docs of a collection and shown via markdown. This isn't very useful since the absolute path is different for every git collaborator on the workflow.\nIdeally local image path references in markdown would be resolved from the path of the .bru file which references them.\n\nIn the below example to resolve:\n`/Users/A200301325/Documents/projects/bruno-demo/workflows/Demo-0/_docs/diagram.svg`\nfrom:\n`/Users/A200301325/Documents/projects/bruno-demo/workflows/Demo-0/collection.bru`\nthis should be a valid image reference:\n```\n ![sadly I am broken...](./_docs/diagram.svg)\n```\n\n### Mockups or Images of the feature\n\n<img width=\"1064\" alt=\"Screenshot 2024-05-22 at 13 11 37\" src=\"https://github.com/usebruno/bruno/assets/4309669/8c9dc475-3906-4c29-a741-e69bc32c9ef4\">\n<img width=\"1083\" alt=\"Screenshot 2024-05-22 at 13 11 57\" src=\"https://github.com/usebruno/bruno/assets/4309669/f4dfe9ef-8acf-40e2-b8ec-e73126f2f7d9\">\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2350/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2350/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2350/events",
    "user_login": "shawnsarwar",
    "user_url": "https://github.com/shawnsarwar",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 3,
    "comment_image_count": 0,
    "total_image_count": 3
  },
  {
    "id": 2301783700,
    "number": 2326,
    "html_url": "https://github.com/usebruno/bruno/issues/2326",
    "type": "issue",
    "labels": "enhancement,module-auth,module-collection",
    "created_date": "2024-05-17 04:21:51",
    "updated_date": "2025-02-27 18:04:54",
    "resolved_date": "2025-02-27 18:04:53",
    "title": " Unable to Set Authentication at Collection Level, Making Inheritance Feature Ineffective",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nIn the Bruno API client, users are unable to set authentication methods, such as Bearer Token, at the collection level. Consequently, each request must be manually configured with the authentication method. This undermines the purpose of the inheritance feature, which is supposed to streamline the process by allowing requests to inherit authentication settings from the collection level. The absence of this functionality makes it tedious to manage authentication for multiple requests within the same collection.\n\n### Mockups or Images of the feature\n\n<img width=\"960\" alt=\"noAuthentication at collection level\" src=\"https://github.com/usebruno/bruno/assets/118682799/018992db-86e3-4ff3-9137-e8acc129e2c3\">\n",
    "state": "closed",
    "comments": 5,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2326/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2326/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2326/events",
    "user_login": "jeevankumarj25",
    "user_url": "https://github.com/jeevankumarj25",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2297940543,
    "number": 2315,
    "html_url": "https://github.com/usebruno/bruno/issues/2315",
    "type": "issue",
    "labels": "enhancement,critical,module-auth,module-openapi",
    "created_date": "2024-05-15 13:33:10",
    "updated_date": "2025-05-21 10:01:06",
    "resolved_date": "2025-03-17 11:32:52",
    "title": "Set \"Auth: Inherited\" as default on openapi import",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI love the option to set the default authentication on collection level. However, when I import an openapi spec, it doesn't set \"inherit\" as default. For now, I import the openapi, export it again, modify the json, then import it with \"inherit\" on all requests.\n\nA better default on openapi import for auth would be to just use \"inherit\" as auth strategy.\n\n### Mockups or Images of the feature\n\n![image](https://github.com/usebruno/bruno/assets/10211736/35932159-d3ac-4c76-aaf6-a31795d4de1f)\n",
    "state": "closed",
    "comments": 6,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2315/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2315/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2315/events",
    "user_login": "romst",
    "user_url": "https://github.com/romst",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2287711935,
    "number": 2275,
    "html_url": "https://github.com/usebruno/bruno/issues/2275",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-05-09 13:33:58",
    "updated_date": "2024-11-13 13:58:40",
    "resolved_date": "2024-11-13 13:58:39",
    "title": "Feature Request: OAuth2 support for sending in state for Authorization Code flow",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nOur OAuth2 provider requires a state param to be sent in. With the current implementation of Authorization Code we get back an error stating \"The authentication request has an invalid 'state' parameter.\" A textbox under scope where we can enter the state param would be nice like other oauth clients.\n\n### Mockups or Images of the feature\n\n<img width=\"443\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/1161543/a6423f18-c5a3-401e-912b-0411696cfb92\">\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2275/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2275/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2275/events",
    "user_login": "werge2121",
    "user_url": "https://github.com/werge2121",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2285067069,
    "number": 2265,
    "html_url": "https://github.com/usebruno/bruno/issues/2265",
    "type": "issue",
    "labels": "enhancement,module-graphql",
    "created_date": "2024-05-08 08:57:32",
    "updated_date": "2024-11-26 02:41:06",
    "resolved_date": "2024-11-26 02:41:06",
    "title": "Support formatting/prettifying GraphQL request variables",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nThere's already a \"Prettify\" button for GraphQL queries/mutations, but not for the JSON variables editor.\n\nWould like to propose to add such a button to the `CodeEditor` component (should be opt-in for consumers of that component) so that it can be made available to the GraphQL variables editor and potentially other places (such as `QueryResultPreview` to allow for formatting response bodies).\n\nAs is already the case with the GraphQL query editor, `prettier` should be able to do the job just fine here.\n\n### Mockups or Images of the feature\n\n![image](https://github.com/usebruno/bruno/assets/20454271/59aa2e12-0c3f-44ef-b84a-42b724dc1adb)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2265/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2265/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2265/events",
    "user_login": "Eynorey",
    "user_url": "https://github.com/Eynorey",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2280727123,
    "number": 2251,
    "html_url": "https://github.com/usebruno/bruno/issues/2251",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-05-06 12:06:38",
    "updated_date": "2024-11-20 12:11:46",
    "resolved_date": "2024-11-20 12:11:45",
    "title": "Collection runner parallelism should be optional",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nThe iteration count on the collection runner could be used for performance testing if it had an option to disable running the tests in parallel. For instance, I'd like to run a certain request 10 times so that I can figure out the average timing. Running the tests in parallel shows how it will perform under high load, but running them serially would be more useful for evaluating whether a specific change makes things better or worse.\n\nAlso, on the Runner page, it would be very helpful if the results table included timing information broken down per request. You can dig this information out by drilling into each iteration and finding the request you're interested in.\n\nAnd finally, some way to run multiple iterations of a single request would be very helpful, especially when I'm trying to tune an individual operation. For now, I can just move the request to a folder and run that “collection”, but a more official way would be better.\n\nMy use case is testing whether a query optimization is actually making things better or worse. I want to run an individual query 10 times, and gather the average time for the whole run before and after each tweak I make.\n\n### Mockups or Images of the feature\n\n![image](https://github.com/usebruno/bruno/assets/1153287/3a60c277-5044-4bca-9bd2-1f42087e97b3)\n![image](https://github.com/usebruno/bruno/assets/1153287/ecf2e5e9-f452-48a4-8ca2-4121902c9642)\n",
    "state": "closed",
    "comments": 5,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2251/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2251/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2251/events",
    "user_login": "MelGrubb",
    "user_url": "https://github.com/MelGrubb",
    "assignees": "lohxt1",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2263534516,
    "number": 2170,
    "html_url": "https://github.com/usebruno/bruno/issues/2170",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-25 13:03:08",
    "updated_date": "2024-06-14 11:19:23",
    "resolved_date": "2024-06-14 11:19:23",
    "title": "Allow setting a default environment",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nCurrently when a collection have environments, by default `no environment` is selected\n\nI wish I could assign a default one, so the at the collection I load is working without any more action\n\n### Mockups or Images of the feature\n\n![image](https://github.com/usebruno/bruno/assets/1228204/7f84f416-51eb-4dd5-ae5a-75b3306742f4)\n",
    "state": "closed",
    "comments": 5,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2170/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2170/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2170/events",
    "user_login": "nmss",
    "user_url": "https://github.com/nmss",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2258279605,
    "number": 2155,
    "html_url": "https://github.com/usebruno/bruno/issues/2155",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-23 08:33:37",
    "updated_date": "2024-11-07 10:20:43",
    "resolved_date": "2024-11-07 10:20:43",
    "title": "[Feature request] Please allow br.setNextRequest() in the Test section of a request",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nHi,\n\nIt would be very nice to get bru.setNextRequest() in the \"Tests\" section of a request too. In the \"Tests\" section I check the correctness of the response. In my opinion this is the right part were to decide if the response is so bad, that it does not make sense to continue with the collection. As consequence I what to execute the bru.setNextRequest() to skip some requests or terminate the collection run at all.\n\nAs the current request is executed as all scripts (post response, tests) are finished I do not see any conceptional problem to set the next request in the test section too.\n\nKind Regards\nThomas\n\n### Mockups or Images of the feature\n\n![image](https://github.com/usebruno/bruno/assets/152491463/d5f10d6b-56a9-430f-8e1e-51fdda3536fd)\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2155/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2155/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2155/events",
    "user_login": "tho-gru-38",
    "user_url": "https://github.com/tho-gru-38",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2254460360,
    "number": 2142,
    "html_url": "https://github.com/usebruno/bruno/issues/2142",
    "type": "issue",
    "labels": "enhancement,good first issue",
    "created_date": "2024-04-20 08:58:27",
    "updated_date": "2024-08-14 10:10:45",
    "resolved_date": "2024-08-14 10:10:45",
    "title": "Close Multiple tabs",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nHI,\n\nIf we get the feature as close all tabs, close tabs to the right it will be helpful\n\nThanks\nMahendran\n\n### Mockups or Images of the feature\n\n![image](https://github.com/usebruno/bruno/assets/85107877/3b006db3-f06b-45eb-812a-37e404a87454)\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2142/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2142/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2142/events",
    "user_login": "mahendran-murugesan",
    "user_url": "https://github.com/mahendran-murugesan",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2253304033,
    "number": 2138,
    "html_url": "https://github.com/usebruno/bruno/issues/2138",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-19 15:35:32",
    "updated_date": "2024-08-27 12:01:58",
    "resolved_date": "2024-08-27 12:01:57",
    "title": "Highlight tabs that have content",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nBecause it is a bit annoying to go through each tab to see if it contains some data, it would be great if the tab names could be highlighted when they contain some data.\n\nFor example in the following mockup, tabs Auth, Script and Assert are highlighted because they contain some data.\n\n### Mockups or Images of the feature\n\nCURRENT:\n\n![image](https://github.com/usebruno/bruno/assets/139650490/e23ff1d6-032b-4bb7-802f-0d4ff2ecba0e)\n\nSUGGESTED:\n\n![image](https://github.com/usebruno/bruno/assets/139650490/18762da0-a870-4a74-bcd5-028eec677d7b)",
    "state": "closed",
    "comments": 4,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2138/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2138/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2138/events",
    "user_login": "end3rbyte",
    "user_url": "https://github.com/end3rbyte",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 4,
    "total_image_count": 6
  },
  {
    "id": 2253299970,
    "number": 2137,
    "html_url": "https://github.com/usebruno/bruno/issues/2137",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-19 15:33:09",
    "updated_date": "2024-10-13 03:18:34",
    "resolved_date": "2024-10-13 03:18:34",
    "title": "pull request for wsse authentication",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nI'd like to add native wsse authentication. Here's my pull request: https://github.com/usebruno/bruno/pull/2136\n\n### Mockups or Images of the feature\n\n![Screenshot 2024-04-19 at 11 29 31 AM](https://github.com/usebruno/bruno/assets/42273062/89da304b-9b67-4778-a4a0-3c5dbbb4f1f9)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2137/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2137/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2137/events",
    "user_login": "dwolter-emarsys",
    "user_url": "https://github.com/dwolter-emarsys",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2247744189,
    "number": 2106,
    "html_url": "https://github.com/usebruno/bruno/issues/2106",
    "type": "issue",
    "labels": "enhancement,short-term-goal,module-oauth2",
    "created_date": "2024-04-17 08:52:04",
    "updated_date": "2025-04-03 12:31:45",
    "resolved_date": "2025-04-03 12:31:44",
    "title": "OAuth 2.0 Client Credentials Basic Auth",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nThere are multiple ways of authenticating OAuth 2.0 Clients at the `/oauth2/token`:\n\n[RFC 6749 section 2.3.1](https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1)\n\n* HTTP Basic Authorization (`client_secret_basic`) - the OAuth 2.0 Client ID and secret are sent in the HTTP Header (Authorization: basic ....)\n* HTTP Body (`client_secret_post`) - the OAuth 2.0 Client ID and secret are sent in the POST body (Content-Type: application/x-www-form-urlencoded)\n\nCurrently, bruno only supports the `client_secret_post` method for client authentication. This feature request proposes adding support for `client_secret_basic` as configuration option.\n\n### Mockups or Images of the feature\n\n![image](https://github.com/usebruno/bruno/assets/16361556/ec9602fe-1e1d-4b68-94de-6590e9298dc2)",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2106/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2106/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2106/events",
    "user_login": "francesconi",
    "user_url": "https://github.com/francesconi",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2240137168,
    "number": 2069,
    "html_url": "https://github.com/usebruno/bruno/issues/2069",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-12 13:14:54",
    "updated_date": "2024-10-23 14:02:14",
    "resolved_date": "2024-10-23 14:02:14",
    "title": "Make Docs tab more prominent",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nThe current Docs tab has no indication whether it has contents or not. Several other tabs display a count indicating the number of entries on that \"tab\", but the Docs tab doesn't. I don't think a count is appropriate, but some indication that there's something to be read would be nice. Maybe a simple asterisk?\n\n### Mockups or Images of the feature\n\n![image](https://github.com/usebruno/bruno/assets/1153287/3d1497f4-a615-4b11-b943-24ae02ed45ec)\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2069/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2069/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2069/events",
    "user_login": "MelGrubb",
    "user_url": "https://github.com/MelGrubb",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2234967771,
    "number": 2049,
    "html_url": "https://github.com/usebruno/bruno/issues/2049",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-10 07:47:05",
    "updated_date": "2024-04-10 11:56:54",
    "resolved_date": "2024-04-10 11:56:53",
    "title": "Need a callback url validated by google for oauth2 configuration for google cloud platform APIs",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nIn order to use google cloud platfortm apis, we need a callback url in oauth2 authorization code configuration.\nIf the call back url doesn't fit the google policy there is an error \"Authorization Error Error 400: redirect_uri_mismatch\". \n\nFor example with postman the callback url validated by google policy is https://oauth.pstmn.io/v1/callback\n\n### Mockups or Images of the feature\n\n![image](https://github.com/usebruno/bruno/assets/56500375/981f6e61-705a-4496-b982-ffef4f7ef3b6)\n",
    "state": "closed",
    "comments": 4,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2049/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2049/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2049/events",
    "user_login": "bax137",
    "user_url": "https://github.com/bax137",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 2,
    "total_image_count": 3
  },
  {
    "id": 2233705480,
    "number": 2046,
    "html_url": "https://github.com/usebruno/bruno/issues/2046",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-09 15:20:15",
    "updated_date": "2024-04-09 17:22:15",
    "resolved_date": "2024-04-09 17:22:15",
    "title": "pixelated font when viewing over citrix",
    "body": "### I have checked the following:\n\n- [X] I've searched existing issues and found nothing related to my issue.\n\n### Describe the feature you want to add\n\nThe Bruno editor's Font is pixelated on Windows over citrix.\nI go to settings then font and I see \"default\" is the choice.\nWhat other options are there?\n\n### Mockups or Images of the feature\n\nnormal view:\n\n![image](https://github.com/usebruno/bruno/assets/2238777/f303b69e-6ce1-4d7d-bf6a-0ceef112702c)\n\nover citrix\n\n![image](https://github.com/usebruno/bruno/assets/2238777/bbe15247-6d94-4a8d-bb5f-a005b2417d21)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2046/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2046/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2046/events",
    "user_login": "nddipiazza",
    "user_url": "https://github.com/nddipiazza",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 1,
    "total_image_count": 3
  },
  {
    "id": 2225066475,
    "number": 2005,
    "html_url": "https://github.com/usebruno/bruno/issues/2005",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-04 10:13:09",
    "updated_date": "2024-06-14 11:38:58",
    "resolved_date": "2024-06-14 11:38:58",
    "title": "[Request] When using post response variables, the actual response of the request should be returned even if the var fails to be set",
    "body": "## Problem\n\nCurrently when we have a post response variable configured, that expect a specific response format like `res.body.data.id` - it will fail whenever that particular format is not found.\nThere are cases where that format may be missing, for example due to expired token - that results with a different response from the API we call.\nHowever, right now, with the variable configured, Bruno will show:\n`Error invoking remote method 'send-http-request': TypeError: Cannot read properties of undefined (reading 'id')` \ninstead of the actual response. To see the actual response the only way is to disable the variables(s) and call the endpoint again. \n\nThis is how it looks in app:\n![image](https://github.com/usebruno/bruno/assets/11226976/b04486a3-6595-4a7b-b872-e413be7b611e)\n\n## Suggestion \n\nWhen post response variables are in use, but the response does not return what the variable expects, it should still show the actual response. The error of the variable should be showed in a separate tab - similar to how test assertions are working - that a failed test does not replaces the response, but shows the information in a separate tab.\n\n\nMy apologies if this is somewhere mentioned already, but I couldnt find similar request with my search phrases. ",
    "state": "closed",
    "comments": 0,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/2005/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/2005/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/2005/events",
    "user_login": "prwnr",
    "user_url": "https://github.com/prwnr",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2204619649,
    "number": 1913,
    "html_url": "https://github.com/usebruno/bruno/issues/1913",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-03-24 23:40:04",
    "updated_date": "2024-04-09 21:17:26",
    "resolved_date": "2024-04-09 21:17:26",
    "title": "Feature: Add pretty option to XMLrequest the same way that JSON request",
    "body": "Add pretty option to xml request the same way that JSON request\n\nCurrent JSON REQUEST\n\n<img width=\"375\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/29415755/856d26a2-ca0b-4a2e-a6ef-a573f20695b7\">\n\n\nCurrent XML REQUEST\n\n<img width=\"364\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/29415755/f0a0ec46-cdee-481e-ac77-0615dc459e97\">\n\n\nExpected XML REQUEST\n\n<img width=\"384\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/29415755/7d8fb35b-6630-4e5e-a5d5-ff58a7768524\">\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1913/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1913/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1913/events",
    "user_login": "tlaloc911",
    "user_url": "https://github.com/tlaloc911",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 3,
    "comment_image_count": 0,
    "total_image_count": 3
  },
  {
    "id": 2201043798,
    "number": 1895,
    "html_url": "https://github.com/usebruno/bruno/issues/1895",
    "type": "issue",
    "labels": "enhancement,good first issue",
    "created_date": "2024-03-21 19:52:22",
    "updated_date": "2024-08-27 13:17:41",
    "resolved_date": "2024-08-27 13:17:40",
    "title": "UX issue with buttons",
    "body": "Top right:\n<img width=\"154\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/14110063/0d0313cc-41cc-4387-8c3e-6fe14d2a278b\">\n\nBottom left:\n<img width=\"139\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/14110063/e6a534a7-87b1-433e-b82a-c6eed0b13734\">\n\nProblems:\n- The dog button is a non-standard icon\n- The stick figure running-icon is a non-standard icon\n- Inconsistent hover functionality\n- No supporting content\n\nPossible solutions:\n- Add supporting text via title prop to all buttons\n- Make hover css consistent\n- Optionally improve icons\n  - Change stick-figure to play icon\n  - Separate dog-icon adding a separator between functionalities the premium-locked menu",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1895/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1895/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1895/events",
    "user_login": "ankarhem",
    "user_url": "https://github.com/ankarhem",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2159033416,
    "number": 1679,
    "html_url": "https://github.com/usebruno/bruno/issues/1679",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-02-28 13:57:04",
    "updated_date": "2024-06-14 11:25:07",
    "resolved_date": "2024-06-14 11:25:07",
    "title": "Support Auto Save",
    "body": "Support to auto save on request will save lot of my time\n\n\nI thing put a new preference in general tab could be good ideia!\n\n<img width=\"404\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/36305985/0ad92484-ed9b-4e8d-b650-1d842da94293\">\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1679/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1679/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1679/events",
    "user_login": "leoferreiralima",
    "user_url": "https://github.com/leoferreiralima",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2142025059,
    "number": 1627,
    "html_url": "https://github.com/usebruno/bruno/issues/1627",
    "type": "issue",
    "labels": "enhancement,module-oauth2",
    "created_date": "2024-02-19 10:22:22",
    "updated_date": "2025-04-03 11:52:37",
    "resolved_date": "2025-04-03 11:52:37",
    "title": "[Feature Request]: Token access on collection level with one-click button",
    "body": "This feature already exists in Postman and would be a useful in Bruno.\nTechnically it can be done using pre-request scripts but this does not seem like a clean alternative.\n![image](https://github.com/usebruno/bruno/assets/64689165/745ae5b3-de7c-42dd-9724-4522f0455229)\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1627/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1627/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1627/events",
    "user_login": "bpoulaindev",
    "user_url": "https://github.com/bpoulaindev",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2137493067,
    "number": 1602,
    "html_url": "https://github.com/usebruno/bruno/issues/1602",
    "type": "issue",
    "labels": "enhancement,module-request",
    "created_date": "2024-02-15 21:38:17",
    "updated_date": "2024-12-15 12:38:45",
    "resolved_date": "2024-12-15 12:38:45",
    "title": "Multi-part requests: user should be able to set content-type for each part in a multi-part request. ",
    "body": "When setting up a multipart request, Bruno automatically selects the content-type of the file part. The auto-assigned content-type is not always the desired content-type of the API spec, therefore our request will always result in a 400 Bad Request, because the content-type is wrong.\n\n**Please allow a way for the user to set the content type for a multi-part request part. File or text**\n\n**Text/Param:** user should be able to set because this could be blank, application/json, application/xml, text/plain or many other things.\n**Files:** user should be able to set because this could be blank, application/pdf, application/octet-stream, application/vnd.ms-excel, text/csv or many other things.\n\nExample: Multipart Form Data: PDF file content-type automatically set. No manual way for user to set content-type for a file.\nWhy is this a problem: API spec for the pdf file wants \"application/octet-stream\" for the content-type. Bruno automatically sets the content-type to \"application/pdf\". No way to manually set the content-type. Results in 400 bad request because content-type does not match API spec and there is no way to change in Bruno.\n\n![image](https://github.com/usebruno/bruno/assets/131696171/66d14d8c-6125-4f8e-a22e-23e373d1de9f)\n\nThis appears to align with your plans to update the Bru Lang Schema https://github.com/usebruno/bruno/issues/1502 but I want to make sure the user can set the content-type in the UI for params and files.\n\n## Versions\nv1.9.0\n\n\n## Steps to reproduce 1\n1. Create POST request\n2. Go to Body \n3. Select Multipart Form\n4. Click Add Param\n5. Enter key and value <---User cannot change content-type of the file\n\n## Steps to reproduce 2\n1. Create POST request\n2. Go to Body \n3. Select Multipart Form\n4. Click Add File\n5. Enter key and select file<---User cannot change content-type of the file\n\n\nFor reference this is how it works in Postman:\n![image](https://github.com/usebruno/bruno/assets/131696171/2eb231ad-7de5-40e8-a5fa-31b01d2a3b24)\n",
    "state": "closed",
    "comments": 7,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1602/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1602/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1602/events",
    "user_login": "ash-eng-spin",
    "user_url": "https://github.com/ash-eng-spin",
    "assignees": "helloanoop",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2129441744,
    "number": 1568,
    "html_url": "https://github.com/usebruno/bruno/issues/1568",
    "type": "issue",
    "labels": "enhancement,help wanted,module-qol",
    "created_date": "2024-02-12 05:23:27",
    "updated_date": "2025-05-26 13:17:40",
    "resolved_date": "2025-05-26 13:17:39",
    "title": "[Feature request] Organise folders in collection by drag and drop",
    "body": "Currently, folders within a Collection are sorted alphabetically. Users should have the ability to reorder the folders by dragging and dropping them into their preferred arrangement.\n\nFor example, similar to Postman, I want to move the `Operational` folder so it comes after the `Users` folder.\n![obraz](https://github.com/usebruno/bruno/assets/72373858/9bc056cb-cd42-4203-bcb5-e120fa604d89)\n\nTo clarify how nesting folders appears:\n![obraz](https://github.com/usebruno/bruno/assets/72373858/d095ea9b-b1ee-44c6-937a-83e25e2a1c0d)\n\nAdditionally, when importing a Collection from Postman, it should be organized in Bruno to maintain the same order as in Postman.\nMentioned here: https://github.com/usebruno/bruno/issues/1456\n\n",
    "state": "closed",
    "comments": 10,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1568/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1568/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1568/events",
    "user_login": "jaktestowac",
    "user_url": "https://github.com/jaktestowac",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2102947504,
    "number": 1456,
    "html_url": "https://github.com/usebruno/bruno/issues/1456",
    "type": "issue",
    "labels": "enhancement,module-importers,module-collection",
    "created_date": "2024-01-26 21:46:06",
    "updated_date": "2025-02-10 14:14:41",
    "resolved_date": "2025-02-10 14:14:39",
    "title": "Default sorting collapse the collection order when we import from postman",
    "body": "when we have an order of request maintained in Postman, due to the default sorting of Bruno the collection requests order changed which will impact the execution order\n\n![image](https://github.com/usebruno/bruno/assets/44080743/5cfbe74a-3981-4195-9179-019f27d404de)\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1456/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1456/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1456/events",
    "user_login": "sseenivasan89",
    "user_url": "https://github.com/sseenivasan89",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2094594516,
    "number": 1432,
    "html_url": "https://github.com/usebruno/bruno/issues/1432",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-01-22 19:21:16",
    "updated_date": "2024-09-04 22:24:43",
    "resolved_date": "2024-09-04 22:24:43",
    "title": "Add count of matches for searches",
    "body": "In the response field it is really convenient to be able to do a search for something like \"error\" and see a count of how many errors there are.\n\n![image](https://github.com/usebruno/bruno/assets/9060889/b850fc7c-9965-4f29-8e42-9a3eb5f3a9f5)\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1432/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1432/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1432/events",
    "user_login": "barnesyard",
    "user_url": "https://github.com/barnesyard",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2048691207,
    "number": 1248,
    "html_url": "https://github.com/usebruno/bruno/issues/1248",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2023-12-19 13:43:52",
    "updated_date": "2024-09-04 22:18:12",
    "resolved_date": "2024-09-04 22:18:12",
    "title": "[Feature]: Upgrade to Tailwind V3 to enable children selector",
    "body": "A migration to **Tailwind V3** (3.3.6 now) is needed, to enable **child selectors** and stop being dependant on StyledWrapper, which doesn't use the same styling variables as our tailwind config.\n\nThis migration is a **non-breaking change**, i already did a PR which also corrects **alias imports** not using an \"@\", although those can be separated : [Tailwind V3 migration](https://github.com/usebruno/bruno/pull/1083)\n\nChildren selector are stable and would enable us to target children when we can't directly give them classnames : \n<img width=\"282\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/64689165/87a2ae09-be34-4b46-b370-c1889eaed0be\">\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1248/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1248/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1248/events",
    "user_login": "bpoulaindev",
    "user_url": "https://github.com/bpoulaindev",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2042266976,
    "number": 1222,
    "html_url": "https://github.com/usebruno/bruno/issues/1222",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2023-12-14 18:41:04",
    "updated_date": "2024-09-15 20:05:45",
    "resolved_date": "2024-09-15 20:05:45",
    "title": "[Feature] keyboard shortcut: create collection when clicking Enter",
    "body": "It would be nice to be able to create location with \"Enter\" key \n\n<img width=\"327\" alt=\"image\" src=\"https://github.com/usebruno/bruno/assets/44786136/aa7e0e19-7db9-486e-8f5a-013f98349f21\">\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1222/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1222/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1222/events",
    "user_login": "IonasNeonakis",
    "user_url": "https://github.com/IonasNeonakis",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2027979749,
    "number": 1158,
    "html_url": "https://github.com/usebruno/bruno/issues/1158",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2023-12-06 08:17:21",
    "updated_date": "2024-09-04 22:17:08",
    "resolved_date": "2024-09-04 22:17:08",
    "title": "bru.sleep() API",
    "body": "\n![image](https://github.com/usebruno/bruno/assets/9350733/1d210b9b-47a3-44dc-be55-c841cdc19271)\n\nThinking of supporting `bru.sleep()` which supports awaiting a certain time in scripting\n\nThis Sample works in pre-request / post-response scripts. We can support this as an api - `bru.sleep(<ms>)`\n```\nfunction sleep (ms) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n}\n\nawait sleep(1000);\n```",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1158/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1158/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1158/events",
    "user_login": "helloanoop",
    "user_url": "https://github.com/helloanoop",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2023975876,
    "number": 1138,
    "html_url": "https://github.com/usebruno/bruno/issues/1138",
    "type": "issue",
    "labels": "enhancement,help wanted",
    "created_date": "2023-12-04 14:23:38",
    "updated_date": "2024-04-17 08:49:46",
    "resolved_date": "2024-04-17 08:49:45",
    "title": "[Feature Request] Multiline strings in Form URL Encoded bodies",
    "body": "Some of our API endpoints require multiline strings of JSON or XML to be passed via URL parameters.  \n\nCurrently in Bruno the body parameter editor only allows you to see one line at a time. The user is still able to scroll through the data using the up and down arrow keys but it can be tedious. The .bru format will also convert these into an escaped single line string which also makes it difficult to work with.\n\n### Current implementation\n![image](https://github.com/usebruno/bruno/assets/1078339/fbfaf332-2965-461b-9d16-19b9b327f411)\n\n### Proposed Change\n\nA potential format for multiline string values could be something like this, based on how script blocks are already handled in Bruno\n\n```\nbody:form-urlencoded {\n  Action: SendMessage\n  MessageBody: {\n    <?xml version=\"1.0\"?>\n    <TestEvent>\n      <Name>Test</name>\n      <Value>123</value>\n    </TestEvent>\n  }\n}\n```\n\nThe UI could take inspiration from Insomnia\n\n![image](https://github.com/usebruno/bruno/assets/1078339/77430021-db3f-46f9-a010-8d47c38dff45)\n![image](https://github.com/usebruno/bruno/assets/1078339/7d36fa4f-016f-4b97-b524-e80d2d66b659)\n\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/1138/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/1138/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/1138/events",
    "user_login": "medsouz",
    "user_url": "https://github.com/medsouz",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 3,
    "comment_image_count": 0,
    "total_image_count": 3
  },
  {
    "id": 1990001248,
    "number": 956,
    "html_url": "https://github.com/usebruno/bruno/issues/956",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2023-11-13 06:57:38",
    "updated_date": "2024-07-02 10:36:53",
    "resolved_date": "2024-07-02 10:36:52",
    "title": "[Feature Request] Recursive Variables / Variables referencing variables",
    "body": "As of now variables referencing other variables is not supported.\n\nThe current implementation of the user interface falsely suggests that this might be possible, yet executing requests ignores variables within the variable.\n\n![Recursive Variables in Bruno Environment 1](https://github.com/usebruno/bruno/assets/50519619/42678fcc-a157-4fbb-b927-70348e1b2dbb)\n![Recursive Variables in Bruno Environment 2](https://github.com/usebruno/bruno/assets/50519619/b8f4330c-0ddf-4994-91c4-868fb0697c58)\n\nThis functionality is supported within [Postman](https://community.postman.com/t/variables-within-variables/4082/2) and [Insomnia](https://docs.insomnia.rest/insomnia/environment-variables#recursive-variables).\n\nIt would be nice for Bruno to support this functionality as well. If this is not planned it should be thought about User Interface modifications so that there's no false suggestion of that working.",
    "state": "closed",
    "comments": 9,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/956/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/956/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/956/events",
    "user_login": "tsteckenborn",
    "user_url": "https://github.com/tsteckenborn",
    "assignees": "sanjai0py",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 1,
    "total_image_count": 3
  },
  {
    "id": 1979440386,
    "number": 902,
    "html_url": "https://github.com/usebruno/bruno/issues/902",
    "type": "issue",
    "labels": "enhancement,module-variables",
    "created_date": "2023-11-06 15:31:01",
    "updated_date": "2024-12-01 16:35:35",
    "resolved_date": "2024-12-01 16:35:35",
    "title": "[Feature-Request] request-level environment variables",
    "body": "Hi, is it possible to specify variables for the URL at the level of a request environment? We would like to start using Bruno in the team, if we customize IDs in REST URIs, which is the rule, then they should not be updated in the `.bru`, but rather be quickly replaceable as request-level environment variables.\n\nSorry if this already exists in the documentation or as an issue, I searched both for a long time but found nothing specific.\n\n**Edit**, 2023-11-10:\nAs I haven't heard anything about this, I assume it doesn't exist yet, so I've turned it into a feature request.\n\nWhat does not work at the moment?\n=> Quick and easy management of environment variables at the request level, without writing them to a `.bru` file.\n\nHow might this feature be implemented?\n- Handle request level environment variables like normal variables, i.e. simply using {{var_name}}\n- Request-level environment variables **override** global variables.\n- They could be placed in the Vars tab like pre- and post-request variables.\n- Unlike pre- and post-request variables, they are not synchronised in the `.bru` file, but behave like global **secret environment variables**. \n\nUnfortunately I only have a basic knowledge of Electron, I work more in the Go & PHP backend. If I have the time, I can try to submit a merge request, but I doubt it will be implemented correctly or \"nicely\". Maybe someone else here has more skills than me.\n\nHere is a screenshot that perhaps shows better what I mean by the request-level environment variable:\n\n![bruno_req_level_environment_var](https://github.com/usebruno/bruno/assets/22943809/23374d01-ce01-4f43-8bd4-e26e4e6f2f9d)\n\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/902/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/902/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/902/events",
    "user_login": "lrotermund",
    "user_url": "https://github.com/lrotermund",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 1955471449,
    "number": 715,
    "html_url": "https://github.com/usebruno/bruno/issues/715",
    "type": "issue",
    "labels": "enhancement,good first issue,help wanted",
    "created_date": "2023-10-21 12:29:19",
    "updated_date": "2024-11-08 15:12:17",
    "resolved_date": "2024-11-08 15:10:23",
    "title": "[Feature Request] Option when click on the request tab",
    "body": "- User can close all tab / single tab\n- User can duplicate a tab\n- User can close all right / left tab\n![image](https://github.com/usebruno/bruno/assets/30989286/7acb4706-f566-49ef-a0e5-1d3d92791c7f)\n\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/715/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/715/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/715/events",
    "user_login": "smdedar",
    "user_url": "https://github.com/smdedar",
    "assignees": NaN,
    "milestone_title": "v2",
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 1893937644,
    "number": 189,
    "html_url": "https://github.com/usebruno/bruno/issues/189",
    "type": "issue",
    "labels": "enhancement,short-term-goal,module-filesystem",
    "created_date": "2023-09-13 07:40:53",
    "updated_date": "2025-05-13 13:49:18",
    "resolved_date": "2025-05-13 13:49:18",
    "title": "Support special characters in request name",
    "body": "**Edit: It appears this issue was already raised and closed in https://github.com/usebruno/bruno/issues/147 but the issue still remains.**\n\nPostman allows special characters in the names of each request, which is useful when you're like me and prefer to name requests by the actual URL being requested so I have a 1:1 relationship between my API and the request name in Postman.\n\nFor example, if the API has an endpoint of `GET customers/{id}` (where `{id}` represents a dynamic path param) I would name the request as **customers/{id}**.\n\nBruno doesn't allow this and gives this error:\n\n![image](https://github.com/usebruno/bruno/assets/1322638/68e59546-6227-4cd7-8402-b644993293a0)\n\nAs a result, when I imported my collection from Postman, the special characters got changed to hyphens as per below\n\n![image](https://github.com/usebruno/bruno/assets/1322638/466f1767-9916-4e40-9653-4de865ff8850)\n\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/189/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/189/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/189/events",
    "user_login": "Dobby89",
    "user_url": "https://github.com/Dobby89",
    "assignees": "helloanoop,lohxt1,anusree-bruno",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 1,
    "total_image_count": 3
  },
  {
    "id": 1428257996,
    "number": 54,
    "html_url": "https://github.com/usebruno/bruno/issues/54",
    "type": "issue",
    "labels": "enhancement,good first issue,help wanted",
    "created_date": "2022-10-29 13:12:19",
    "updated_date": "2023-10-05 10:06:51",
    "resolved_date": "2023-10-05 10:06:45",
    "title": "Autocomplete for Request headers",
    "body": "Autocomplete for request header keys.\nLike the user should not have to type the entire work \"Content-Type\"\n\n![image](https://user-images.githubusercontent.com/9350733/198833396-b950aa89-ab71-462c-b135-a5ed5f6194d6.png)\n\nWe need to support the commonly used request header types as well as allow the user to enter custom headers.\n\nLets see if we can make this work without having to use any autocomplete react library.\nI have implemented dropdown like this in an older project (that is not completed yet) see [here](https://github.com/helloanoop/kgraph/blob/main/renderer/pageComponents/Page/Editor/Block/SearchResults/index.js)\n\nWe will implement the _Header Value_ autocomplete once this has been done for _Header Names_.\n\n",
    "state": "closed",
    "comments": 6,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/54/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/54/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/54/events",
    "user_login": "helloanoop",
    "user_url": "https://github.com/helloanoop",
    "assignees": "vijayh1907,helloanoop",
    "milestone_title": "v1",
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 1422148932,
    "number": 45,
    "html_url": "https://github.com/usebruno/bruno/issues/45",
    "type": "issue",
    "labels": "enhancement,good first issue,help wanted",
    "created_date": "2022-10-25 09:24:56",
    "updated_date": "2023-01-29 14:08:00",
    "resolved_date": "2023-01-29 14:08:00",
    "title": "Importing Postman Collections",
    "body": "Postman is the de-facto tool when among developers.\nIt's very important to allow developers to be able to import a postman collection into bruno.\n\nIt must be noted that bruno has a lot less features than postman, but we do support the essentials for anyone to get started.\n\nResources:\nBruno's request schema: https://github.com/usebruno/bruno/tree/main/packages/bruno-schema\nImporter for bruno collections: https://github.com/usebruno/bruno/blob/main/packages/bruno-app/src/utils/collections/import.js\n\nLets get started with just importing as much of a request data that we can import from postman.\n\nCurrently, we can create a new file called 'import-postman-collections.js'. Once this is coming along well, we can move the importers to a separate package called as \"bruno-importers\"\n\nUX:\nRight now, clicking on import brings up a file selector. We need to bring up a modal that has 2 links.\nOne to import bruno collection, another to import postman collection.\n![image](https://user-images.githubusercontent.com/9350733/197736340-2648814c-b886-46bf-aaf9-8d2f8e187e8c.png)\n",
    "state": "closed",
    "comments": 4,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/usebruno/bruno",
    "labels_url": "https://api.github.com/repos/usebruno/bruno/issues/45/labels{/name}",
    "comments_url": "https://api.github.com/repos/usebruno/bruno/issues/45/comments",
    "events_url": "https://api.github.com/repos/usebruno/bruno/issues/45/events",
    "user_login": "helloanoop",
    "user_url": "https://github.com/helloanoop",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 2
  }
]