[
  {
    "id": 3100196080,
    "number": 8784,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/8784",
    "type": "issue",
    "labels": "enhancement,openhands",
    "created_date": "2025-05-29 12:29:51",
    "updated_date": "2025-05-29 18:13:50",
    "resolved_date": "2025-05-29 18:13:50",
    "title": "Add images to docs page for OpenHands Cloud issue resolver",
    "body": "**What problem or use case are you trying to solve?**\n\nCurrently there are not images on the page for the openhands cloud issue resolver. We can add the below two images in appropriate places, to demonstrate adding a repo and using `@openhands` to call the resolver.\n\n![Image](https://github.com/user-attachments/assets/51928bc2-bc22-4139-a85e-fdab4e17baef)\n![Image](https://github.com/user-attachments/assets/13709936-d630-40e6-8b22-7ee08010a8b4)\n\nIn addition, we could give a few examples of commands that we could use like:\n\nIssue:\n* `@openhands read the issue description and fix it`\n\nPull request:\n* `@openhands reflect the review comments`\n* `@openhands fix the merge conflicts and make sure that CI passes`\n\n### If you find this feature request or enhancement useful, make sure to add a üëç to the issue\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/8784/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/8784/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/8784/events",
    "user_login": "neubig",
    "user_url": "https://github.com/neubig",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 3025715210,
    "number": 8126,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/8126",
    "type": "issue",
    "labels": "documentation,enhancement,openhands",
    "created_date": "2025-04-28 17:59:52",
    "updated_date": "2025-05-04 00:10:58",
    "resolved_date": "2025-05-04 00:10:58",
    "title": "Write documentation for OpenHands Cloud API interface",
    "body": "**What problem or use case are you trying to solve?**\n\nIt would be good to have the API interface that was recently added to OpenHands cloud documented.\n\n**Describe the UX or technical implementation you have in mind**\n\nThe tutorial should explain how to obtain an API key, and start a new conversation. It should be added to the OpenHands Cloud subsection of the docs (check the other ones in that section for reference).\n\nAn API key is obtained through the settings window (this PNG can be downloaded and added to the OpenHands repo):\n\n![Image](https://github.com/user-attachments/assets/f73e77f5-fec4-42b7-b09c-2dd06ba5f36a)\n\nAPI spec for starting a conversation: https://docs.all-hands.dev/swagger-ui/#/default/newConversation\n\nWe should provide examples using curl, python requests, and typescript. The style for this can follow the \"Prerequisites\" section of \"Running OpenHands\".\n\n### If you find this feature request or enhancement useful, make sure to add a üëç to the issue\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/8126/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/8126/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/8126/events",
    "user_login": "neubig",
    "user_url": "https://github.com/neubig",
    "assignees": "neubig",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2975016370,
    "number": 7723,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/7723",
    "type": "issue",
    "labels": "enhancement,openhands",
    "created_date": "2025-04-06 15:15:51",
    "updated_date": "2025-05-15 05:24:43",
    "resolved_date": "2025-05-15 05:24:43",
    "title": "Better mechanism for waiting for a long time",
    "body": "**What problem or use case are you trying to solve?**\n\nCurrently, with the tmux implementation, there is no way for the agent to sleep for a long time.\n\nFor instance, when the agent tried to sleep for 90 seconds, it kept sending empty commands to wait for longer, but it eventually did it so long it got stuck in a loop.\n\n<img width=\"365\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b7c8a5ad-488b-4e5a-9af3-52f9fb0e09a5\" />\n\n**Describe the UX of the solution you'd like**\n\nIt would be good for the agent to be able to wait for a longer time when a command is expected to take a long time.\n\n**Do you have thoughts on the technical implementation?**\n\nWe can provide the agent with an additional action that is `WaitAction(seconds: int)`, similar to `CmdRunAction()` that allows the agent to wait for a certain amount of time.\n\nThe WaitAction would simply cause the action executor to wait that many seconds before asking the agent for input again.\n\n### If you find this feature request or enhancement useful, make sure to add a üëç to the issue",
    "state": "closed",
    "comments": 5,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/7723/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/7723/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/7723/events",
    "user_login": "neubig",
    "user_url": "https://github.com/neubig",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2918167771,
    "number": 7245,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/7245",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-03-13 19:13:21",
    "updated_date": "2025-03-13 23:45:32",
    "resolved_date": "2025-03-13 23:45:32",
    "title": "OpenRouter's DeepSeek: R1 (free) integration",
    "body": "**What problem or use case are you trying to solve?**\n\nI am seeking to enhance the OpenHands project by integrating compatibility with OpenRouter's DeepSeek: R1 (free) model. This integration would provide users with access to DeepSeek's advanced reasoning capabilities, thereby improving the functionality and versatility of OpenHands.\n\n**Describe the UX of the solution you'd like**\n\nThe ideal user experience would involve a seamless integration where users can select the DeepSeek: R1 (free) model as an option within OpenHands. Users should be able to input their queries and receive responses that leverage DeepSeek's reasoning abilities without any noticeable delays or complications. The interface should remain intuitive, allowing users to switch between different AI models effortlessly.\n\n**Do you have thoughts on the technical implementation?**\n\nTo implement this integration, the following steps could be considered:\n\n1. **API Integration**: Utilize OpenRouter's API to access the DeepSeek: R1 (free) model. OpenRouter provides an OpenAI-compatible completion API, which simplifies the integration process. Developers can refer to OpenRouter's documentation for guidance on making API calls.\n\n2. **Model Selection Feature**: Modify OpenHands to include an option for users to select the DeepSeek: R1 (free) model. This could involve adding a dropdown menu or a settings panel where users can choose their preferred AI model.\n\n3. **Request Handling**: Ensure that OpenHands can handle requests and responses specific to the DeepSeek: R1 model. This may involve adjusting the data formatting or handling unique response structures associated with DeepSeek.\n\n4. **Testing and Optimization**: Conduct thorough testing to ensure that the integration functions correctly and that the user experience remains smooth. Optimize performance to handle any additional latency that may arise from using the DeepSeek model.\n\n![Image](https://github.com/user-attachments/assets/d30a521d-2b05-4a6a-b503-23291fb6a37f)",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/7245/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/7245/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/7245/events",
    "user_login": "Harnoor6693",
    "user_url": "https://github.com/Harnoor6693",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2829112014,
    "number": 6601,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/6601",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2025-02-04 04:39:11",
    "updated_date": "2025-04-15 14:40:51",
    "resolved_date": "2025-04-15 14:40:51",
    "title": "[Bug]: Prompt Sizes Constantly Increasing (from few k to few hundreds k)",
    "body": "### Is there an existing issue for the same bug?\n\n- [x] I have checked the existing issues.\n\n### Describe the bug and reproduction steps\n\nAsk it to build something bigger, like event planner application. Then ask to build e2e tests. Observe that prompt size is increasing and never decreases. LLM should review its own context and remove obsolete or irrelevant content (like fixed errors).\nOne screenshot shows monotonically increasing prompt size, which makes everything 50x more expensive and 10x slow.\nThe other screenshot shows that after reseting it back to normal.\n\n<img width=\"982\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/cfdb3b10-029d-4e93-a7fe-05f29bbe556f\" />\n![Image](https://github.com/user-attachments/assets/1b5e8ac9-e6f6-4be1-bc67-db918b5dc7d2)\n\n### OpenHands Installation\n\nDocker command in README\n\n### OpenHands Version\n\n0.22\n\n### Operating System\n\nMacOS\n\n### Logs, Errors, Screenshots, and Additional Context\n\nLet me know if something is needed, I can share source code and prompt I use. I don't think it is specific to my case.",
    "state": "closed",
    "comments": 10,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/6601/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/6601/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/6601/events",
    "user_login": "isolomatov-gd",
    "user_url": "https://github.com/isolomatov-gd",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 3,
    "total_image_count": 5
  },
  {
    "id": 2769140146,
    "number": 6048,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/6048",
    "type": "issue",
    "labels": "enhancement,fix-me",
    "created_date": "2025-01-05 06:38:51",
    "updated_date": "2025-01-09 02:39:55",
    "resolved_date": "2025-01-09 02:39:55",
    "title": "Update documentation of recommended models and add deepseek",
    "body": "**What problem or use case are you trying to solve?**\n\nWe have good results with deepseek, and it's quickly becoming a community preferred model.\n\nWe should:\n\n1. Update the documentation regarding preferred models based on @xingyaoww 's [benchmarking results](https://docs.google.com/spreadsheets/d/1wOUdFCMyY6Nt0AIqF705KN4JKOWgeI4wUGUP60krXXs/edit?gid=0#gid=0):\n\n<img width=\"971\" alt=\"Screenshot 2025-01-05 at 3 34 00‚ÄØPM\" src=\"https://github.com/user-attachments/assets/c3f36aae-c11e-4243-9cfc-e224dd961021\" />\n\nThis is the most recommended model: \n* anthropic/claude-3-5-sonnet-20241022\t41.67%\n\nThe following models also can achieve acceptable performance\n* anthropic/claude-3-5-haiku-20241022\t28.67%\n* deepseek/deepseek-chat\t23.00%\n* gpt-4o\t18.67%\n\nWe can also add a link to this spreadsheet (to replace the link to the older blog post that is currently in the doc).\n\n2. Make sure that all of these are added by default in the model selector in the frontend.",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/6048/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/6048/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/6048/events",
    "user_login": "neubig",
    "user_url": "https://github.com/neubig",
    "assignees": "neubig",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2768965969,
    "number": 6031,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/6031",
    "type": "issue",
    "labels": "enhancement,good first issue",
    "created_date": "2025-01-04 19:02:17",
    "updated_date": "2025-03-25 14:38:45",
    "resolved_date": "2025-03-25 14:38:45",
    "title": "UX: Widen the LLM Model drop-down in AI Provider Configuration panel to better view long LLM model names",
    "body": "**What problem or use case are you trying to solve?**\nView the full LLM name I am selecting in the AI Provider Configuration panel. Currently it is cut-off, which is problematic for long model names like the current 2 Claude sonnet 3.5 versions.\n\ncc @neubig \n\n**Describe the UX of the solution you'd like**\nA wider drop-down list for the `LLM Model` drop-down in the AI Provider Configuration panel\n\n**Do you have thoughts on the technical implementation?**\nNo\n\n**Describe alternatives you've considered**\n\n**Additional context**\nIn this case I'd like to ensure that its the sonnet-3.6 flavor i‚Äôm selecting, but the full name is cut off:  \n\n![Screenshot 2025-01-03 at 16 44 11](https://github.com/user-attachments/assets/5ee1d7fc-ee3b-4e8d-81f0-6483585303b2)\n",
    "state": "closed",
    "comments": 6,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/6031/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/6031/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/6031/events",
    "user_login": "morganmcg1",
    "user_url": "https://github.com/morganmcg1",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2762104551,
    "number": 5894,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/5894",
    "type": "issue",
    "labels": "enhancement,fix-me",
    "created_date": "2024-12-29 04:49:19",
    "updated_date": "2024-12-30 22:40:08",
    "resolved_date": "2024-12-30 22:40:08",
    "title": "Make it possible to collapse the right-hand side of the openhands screen",
    "body": "**What problem or use case are you trying to solve?**\n\nCurrently, OpenHands has two major components, the chat window on the left, and the workspace, terminal, etc. on the right.\n<img width=\"1314\" alt=\"Screenshot 2024-12-28 at 11 43 27‚ÄØPM\" src=\"https://github.com/user-attachments/assets/df50dddc-a386-4fa8-aade-90d9b00ef43b\" />\n\n**Describe the UX of the solution you'd like**\n\nIt would be nice to allow the chat component to take the entire screen, as it would allow for better viewing of generated code, changed files, etc. with your entire screen space.\n\n**Do you have thoughts on the technical implementation?**\n\nThis can be implemented as a collapse/expand button, similar to this one from overleaf (but obviously, instead of saying \"PDF\" it'd say something like \"workspace/terminal\":\n\n<img width=\"191\" alt=\"Screenshot 2024-12-28 at 11 48 13‚ÄØPM\" src=\"https://github.com/user-attachments/assets/4d9bcc17-2ebf-4a07-8674-b4cdac5c1f7c\" />\n\n<img width=\"181\" alt=\"Screenshot 2024-12-28 at 11 48 38‚ÄØPM\" src=\"https://github.com/user-attachments/assets/b05f22f3-d8da-4cbd-babf-38bf21631328\" />\n\n\n\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5894/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5894/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5894/events",
    "user_login": "neubig",
    "user_url": "https://github.com/neubig",
    "assignees": "neubig",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 3,
    "comment_image_count": 0,
    "total_image_count": 3
  },
  {
    "id": 2760942557,
    "number": 5854,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/5854",
    "type": "issue",
    "labels": "enhancement,Stale",
    "created_date": "2024-12-27 14:21:02",
    "updated_date": "2025-02-03 12:26:05",
    "resolved_date": "2025-02-03 12:26:03",
    "title": "Create better UI for incorrect/invalid GitHub token",
    "body": "![image](https://github.com/user-attachments/assets/36069259-e653-4b13-9c13-1eb552bff4c5)\n\n\n**What problem or use case are you trying to solve?**\nIf the user enters an incorrect GitHub token through the \"Connect to GitHub\" modal, two toasts appear that don't clearly explain the issue.\n\n![image](https://github.com/user-attachments/assets/703a5743-6585-4093-91d4-223dee605798)\n\nActually, the 500 status code error is due to a failed request to `/api/github/repositories?sort=pushed&page=1&per_page=100` which should not execute at this time \n\n**Describe the UX of the solution you'd like**\nWe previously re-opened the modal if the request failed, we should consider bringing this behaviour back. Instead of display an error toast here, re-open the modal and show an error message above or under the token input\n\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5854/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5854/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5854/events",
    "user_login": "amanape",
    "user_url": "https://github.com/amanape",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2759147890,
    "number": 5806,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/5806",
    "type": "issue",
    "labels": "enhancement,fix-me",
    "created_date": "2024-12-26 00:54:11",
    "updated_date": "2024-12-30 11:40:07",
    "resolved_date": "2024-12-30 11:40:07",
    "title": "Tooltips for navbar",
    "body": "**What problem or use case are you trying to solve?**\n\nThe icons on the navbar on the left are not 100% self-explanatory.\n\n<img width=\"167\" alt=\"398408284-2eff9db9-c4e4-4b20-ad63-d26cbe3e3c7a\" src=\"https://github.com/user-attachments/assets/4180b88d-fe0f-40e3-ad84-c0ec7653ed0f\" />\n\n**Describe the UX of the solution you'd like**\n\nIt would be good to have tooltips where if you mouse-over a navbar item (other than the user icon) it tells you what the icon stands for.\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5806/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5806/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5806/events",
    "user_login": "neubig",
    "user_url": "https://github.com/neubig",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2759126012,
    "number": 5803,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/5803",
    "type": "issue",
    "labels": "documentation,enhancement,fix-me",
    "created_date": "2024-12-25 23:42:10",
    "updated_date": "2025-01-06 16:18:00",
    "resolved_date": "2025-01-06 16:17:59",
    "title": "Document repo-specific prompt customization",
    "body": "**What problem or use case are you trying to solve?**\n\nI believe that OpenHands supports two specific types of repo-specific prompt customization:\n\n1. We have the `.openhands_instructions` file that is used by the github resolver\n2. We have the `.openhands` directory, which allows for the creation of repo-specific micro-agents.\n\nHowever, I believe these are not documented in the documentation site.\n\n**Describe the UX of the solution you'd like**\n\nIt would be good to have these documented as a sub-folder under \"Prompting\" (after \"Micro-Agents\"):\n\n<img width=\"285\" alt=\"Screenshot 2024-12-25 at 6 39 05‚ÄØPM\" src=\"https://github.com/user-attachments/assets/cb76350a-1c7b-40de-be1a-930e5e584d6a\" />\n\n**Do you have thoughts on the technical implementation?**\n\nTo implement this, it would be good to look through the entire OpenHands directory to references to the \".openhands_instructions\" file and \".openhands\" directory, understand exactly how they work.\n\nOnce we know the mechanisms for these two, they can be documented.\n",
    "state": "closed",
    "comments": 4,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5803/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5803/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5803/events",
    "user_login": "neubig",
    "user_url": "https://github.com/neubig",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2757679727,
    "number": 5781,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/5781",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-12-24 12:01:21",
    "updated_date": "2025-04-19 17:01:29",
    "resolved_date": "2025-04-19 17:01:29",
    "title": "Allow us to use MCP servers to extend OpenHand's functionality",
    "body": "**What problem or use case are you trying to solve?**\n\nOpenHands' functionality is currently fairly limited, but Anthropic's MCP standard provides a way for LLMs to interact with many additional services and use them as \"tools\". This could allow for much more complex workflows, e.g. to use Puppeteer or Playwright to test the code in the browser, then if it fails use OpenAI o1 (via MCP) to debug/rewrite it, etc.\n\n**Describe the UX of the solution you'd like**\n\nI guess the ideal would be to be able to install MCP servers in one click or a [prompt](https://github.com/anaisbetts/mcp-installer). The implementation in Cline is neat:\n\n<img width=\"559\" alt=\"Screenshot 2024-12-24 at 17 56 56\" src=\"https://github.com/user-attachments/assets/1989c311-f294-4f2f-8dcb-9fdf4285ccb5\" />\n\n... but the main thing is to be able to access them. Perhaps a list of the installed servers could be good to verify they have been recognised, like in Claude Desktop:\n\n![Screenshot 2024-12-24 at 13 53 01](https://github.com/user-attachments/assets/def0b43f-62a6-4b3c-8ddb-1211ab95a861)\n\n**Do you have thoughts on the technical implementation?**\n\nI don't know OpenHands' architecture, but please be sure to add clear documentation with step-by-step instructions so I know any setup that's required to use this functionality.\n\n**Describe alternatives you've considered**\n\nUsing Claude Desktop instead of OpenHands, because I can probably replicate a lot of the same functionality by just combining MCP servers. But the UI probably wouldn't be as good and I'm not sure if it would work as effectively.\n\n**Additional context**\n\n### If you find this feature request or enhancement useful, make sure to add a üëç to the issue",
    "state": "closed",
    "comments": 22,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5781/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5781/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5781/events",
    "user_login": "orangejon",
    "user_url": "https://github.com/orangejon",
    "assignees": "ryanhoangt",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2728062609,
    "number": 5478,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/5478",
    "type": "issue",
    "labels": "enhancement,fix-me",
    "created_date": "2024-12-09 19:32:01",
    "updated_date": "2024-12-11 23:20:31",
    "resolved_date": "2024-12-11 23:20:31",
    "title": "Add color to the line next to \"Ran a XXX Command\" based on return value",
    "body": "**What problem or use case are you trying to solve?**\n\nIn the interface, we have \"Ran a Bash Command\" or \"Ran a Jupyter Command\" with a line next to it.\n\n<img width=\"416\" alt=\"Screenshot 2024-12-09 at 2 30 39‚ÄØPM\" src=\"https://github.com/user-attachments/assets/87aa4a2e-6984-4f26-8c94-5140b8049260\">\n\nIt would be nice to know if the command was successful or not.\n\n**Describe the UX of the solution you'd like**\n\nWe could change the color of the line depending on the return value. If the command terminates successfully, we can make the line green, otherwise we can make it red.\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5478/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5478/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5478/events",
    "user_login": "neubig",
    "user_url": "https://github.com/neubig",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2680461427,
    "number": 5179,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/5179",
    "type": "issue",
    "labels": "enhancement,fix-me",
    "created_date": "2024-11-21 18:32:42",
    "updated_date": "2024-11-25 15:59:15",
    "resolved_date": "2024-11-25 15:59:15",
    "title": "[frontend]: Push to Github button should only push branch, but not creating a PR",
    "body": "**What problem or use case are you trying to solve?**\n\nAfter clicking the \"push to github\" button, the frontend will automatically send a message asking the agent to push stuff to github AND create a PR.\n\n<img width=\"361\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a1414090-440b-4512-ac75-2c39a86a0d8d\">\n\n![image](https://github.com/user-attachments/assets/f15ead20-8bd0-495a-bfc6-36e10dc51443)\n\n**Describe the UX of the solution you'd like**\n\nWe should have two separate buttons for the functionality of \"push to remote branch\", AND, \"push & create a new PR\" - so we don't accidentally create new PR when not intended.\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 4,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5179/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5179/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/5179/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2645525512,
    "number": 4857,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/4857",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-11-09 02:53:18",
    "updated_date": "2024-11-15 16:44:58",
    "resolved_date": "2024-11-15 16:44:57",
    "title": "Add the ability to resume AFTER reaching max iteration",
    "body": "**What problem or use case are you trying to solve?**\n\nWe are unable to move forward when reaching max iteration in the UI:\n\n![image](https://github.com/user-attachments/assets/d79070d3-91b8-43ae-93a8-ea39871e8273)\n\n**Describe the UX of the solution you'd like**\n\n1. Simply get rid of the max iteration in the UI for now - it will go on until hit the context window limit\n2. Long-term: complete the message/memory condensation @enyst was working on\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 7,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/4857/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/4857/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/4857/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2603715554,
    "number": 4506,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/4506",
    "type": "issue",
    "labels": "enhancement,tracked",
    "created_date": "2024-10-21 21:37:15",
    "updated_date": "2025-05-05 13:27:14",
    "resolved_date": "2025-05-05 13:27:13",
    "title": "FE: Display file edit diff in the file viewer",
    "body": "**What problem or use case are you trying to solve?**\n\nIn https://github.com/All-Hands-AI/OpenHands/pull/3985, we introduce a `FileEditAction`:\nhttps://github.com/All-Hands-AI/OpenHands/blob/da548d308ccb75d8e35898a1e81cffae8e4ee617/openhands/events/action/files.py#L49-L74\n\nAnd a `FileEditObservation` (where `obs.content` is a *git patch*):\nhttps://github.com/All-Hands-AI/OpenHands/blob/da548d308ccb75d8e35898a1e81cffae8e4ee617/openhands/events/observation/files.py#L32-L41\n\nWe should display these properly in the UI.\n\n**Describe the UX of the solution you'd like**\n\nIdeally, whenever there's a `FileEditAction`, we automatically pop up the file that's being edited.\n\nWhen editing is completed, we visualize the edits similar to below:\n\n<img width=\"691\" alt=\"image\" src=\"https://github.com/user-attachments/assets/0b1fe692-1ed8-4af4-8a41-81d0b6ec5b02\">\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 6,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/4506/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/4506/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/4506/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2564506226,
    "number": 4196,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/4196",
    "type": "issue",
    "labels": "enhancement,Stale,fix-me",
    "created_date": "2024-10-03 16:49:41",
    "updated_date": "2024-11-05 01:59:08",
    "resolved_date": "2024-11-05 01:59:07",
    "title": "[Feature request]: Allow LiteLLM to track cost when accessing models from LiteLLM Proxy",
    "body": "**What problem or use case are you trying to solve?**\n\nCurrently, litellm cannot track cost when invoking a model from a LiteLLM proxy.\n\n**Describe the UX of the solution you'd like**\n\n**Do you have thoughts on the technical implementation?**\n\nLiteLLM .completion call's response will have an `x-litellm-response-cost` in the response header when calling models from an LLM proxy.\n\nWe should modify openhands/llm/llm.py so that we first check if the response header is present, if so, we skip any cost calculation and use that directly as completion cost.\n\n![image](https://github.com/user-attachments/assets/0b66fca0-3dd8-448d-b7ea-48eaf6af6158)\n",
    "state": "closed",
    "comments": 4,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/4196/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/4196/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/4196/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2531356303,
    "number": 3913,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/3913",
    "type": "issue",
    "labels": "enhancement,fix-me",
    "created_date": "2024-09-17 14:42:21",
    "updated_date": "2025-01-04 20:17:25",
    "resolved_date": "2025-01-04 20:17:25",
    "title": "Show rate limit issues in the UI",
    "body": "**What problem or use case are you trying to solve?**\n\nI'm getting rate limited by Anthropic. But it just looks like the agent is kinda stuck while it cools down.\n\n**Describe the UX of the solution you'd like**\n\nI'd like the indicator to turn yellow, and show a relevant message about rate limits\n\n<img width=\"257\" alt=\"Screenshot 2024-09-17 at 10 41 33‚ÄØAM\" src=\"https://github.com/user-attachments/assets/4637f867-30ea-466d-add2-6803ed616cd3\">\n\n\n**Do you have thoughts on the technical implementation?**\n\n@tobitege has done a little preliminary work here. Basically I think we need to turn the status/badge from \"agent status\" to \"system status\"\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 11,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/3913/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/3913/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/3913/events",
    "user_login": "rbren",
    "user_url": "https://github.com/rbren",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2456980202,
    "number": 3305,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/3305",
    "type": "issue",
    "labels": "enhancement,good first issue",
    "created_date": "2024-08-09 02:38:55",
    "updated_date": "2024-08-09 16:37:37",
    "resolved_date": "2024-08-09 16:37:37",
    "title": "[frontend] Workspace window is too small to display all files.",
    "body": "**What problem or use case are you trying to solve?**\nThe Workspace window is too small, and long file names in multi-level folders are not fully displayed\n\n<img width=\"232\" alt=\"image\" src=\"https://github.com/user-attachments/assets/0a287943-1861-4587-8bab-0a809c6f7701\">\n\n\n**Describe the UX of the solution you'd like**\nCould there be a scroll bar at the bottom of the window or allow the window width to be adjusted freely? Thank you.",
    "state": "closed",
    "comments": 4,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/3305/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/3305/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/3305/events",
    "user_login": "lingnickTang",
    "user_url": "https://github.com/lingnickTang",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 2,
    "total_image_count": 3
  },
  {
    "id": 2367896952,
    "number": 2590,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/2590",
    "type": "issue",
    "labels": "enhancement,Stale",
    "created_date": "2024-06-22 16:30:38",
    "updated_date": "2024-08-08 02:11:38",
    "resolved_date": "2024-08-08 02:11:38",
    "title": "[Feature] Support vision inputs for LLM with vision capabilities",
    "body": "**What problem or use case are you trying to solve?**\n\nContext: https://opendevin.slack.com/archives/C06P5NCGSFP/p1719073107473339\n\nIt will be very helpful for the agent to actually \"see,\" especially if you ask the agent to develop a web page / frontend UI / game.\n\n**Describe the UX of the solution you'd like**\n\n\n- [ ] **Backend**: We should use litellm to enable vision model support (https://litellm.vercel.app/docs/completion/vision#checking-if-a-model-supports-vision) in the OpenAI API format where image can be represented as `base64` to pass into chat completion call. The chat `Event` (text-only now) needs to be modified to support passing images as \"base64\" to the backend: maybe each chat event can be an interleaved list of `[text, image_in_base64, text, ...]`.\n\n- [ ] **Frontend**: the user can upload images to the *chat* by (1) pasting, (2) clicking to upload, and/or (3) referring to files inside the workspace (e.g., @/workspace/screenshot.png -- this maybe too complicated and can leave to future). And once the image is added, we should show the thumbnail of the added images. The chat `Event` need to be modified to support passing images as \"base64\" to the backend.\n<img width=\"759\" alt=\"image\" src=\"https://github.com/OpenDevin/OpenDevin/assets/38853559/a8131a76-9968-486a-8b57-ee2b3f699a41\">\n\n\n**Do you have thoughts on the technical implementation?**\n\nLiteLLM already have vision model supports: \nhttps://litellm.vercel.app/docs/completion/vision#checking-if-a-model-supports-vision\n\nWe should throw out an error if user choose to use a model without vision support, yet uploaded an image.\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 5,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/2590/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/2590/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/2590/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2307463299,
    "number": 1934,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1934",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-05-21 06:48:32",
    "updated_date": "2025-03-25 15:42:29",
    "resolved_date": "2025-03-25 15:42:29",
    "title": "Use Language Server Protocol (LSP) to re-implement all code editing",
    "body": "**What problem or use case are you trying to solve?**\n\nOpenDevin now sometimes suffers with edit command (concrete example: https://github.com/OpenDevin/OpenDevin/pull/1928).\n\n**Describe the UX of the solution you'd like**\n\nAs suggested by a friend @ganler, maybe it is more like a fundamental solution if we can gradually replace all the `swe-agent` tools to interface with a [Language Server Protocol](https://microsoft.github.io/language-server-protocol/overviews/lsp/overview/):\n\n![image](https://github.com/OpenDevin/OpenDevin/assets/38853559/1d1ab2e9-8ea5-4f74-8d0d-a3c02d7bcbe7)\n\nIt gives us the ability to:\n1. Open file\n2. Change/edit file\n3. Go to the definition of a symbol\n4. More importantly, this is actually [scale to multiple programming languages](https://microsoft.github.io/language-server-protocol/implementors/servers/)!\n\n**Do you have thoughts on the technical implementation?**\n\n- [ ] Starts with translating the existing bash command's implementation to an API call to the language server (e.g., open, edit, etc)\n- [ ] Figure out a better interface for editing -- current HEREDOC + bash causes many weird issues. Can we potentially use `IPython` capability for editing, write these file operation functions in Python, and have the model write and execute Python cells to perform file operations? -- can directly wrap around https://github.com/microsoft/monitors4codegen?tab=readme-ov-file#4-multilspy\n- [ ] Support more advanced features, like going to the definition\n- [ ] Automatically supports multiple language servers for most existing programming languages.\n- [ ] Show VSCode warning / problems\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 19,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1934/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1934/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1934/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2304817610,
    "number": 1907,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1907",
    "type": "issue",
    "labels": "enhancement,good first issue",
    "created_date": "2024-05-19 22:56:08",
    "updated_date": "2024-05-20 07:15:12",
    "resolved_date": "2024-05-20 07:15:12",
    "title": "Better in-line code styling for messages",
    "body": "**What problem or use case are you trying to solve?**\nWe're currently rendering `inline code` in a way that isn't super distinguishable from other text\n\n**Describe the UX of the solution you'd like**\nSomething closer to what `github does`\n<img width=\"415\" alt=\"Screenshot 2024-05-19 at 6 55 09‚ÄØPM\" src=\"https://github.com/OpenDevin/OpenDevin/assets/7611973/3a85d21c-e117-47e6-a361-394bce891e5e\">\n\n\n**Do you have thoughts on the technical implementation?**\nCSS",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1907/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1907/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1907/events",
    "user_login": "rbren",
    "user_url": "https://github.com/rbren",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2295235163,
    "number": 1778,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1778",
    "type": "issue",
    "labels": "enhancement,severity:critical",
    "created_date": "2024-05-14 11:59:46",
    "updated_date": "2024-06-17 11:13:18",
    "resolved_date": "2024-06-17 11:13:18",
    "title": "Make Reconnecting to OpenDevin better when the Session crashes",
    "body": "**What problem or use case are you trying to solve?**\nMake Reconnecting to OpenDevin better when the Session crashes\n\n**Describe the UX of the solution you'd like**\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n![grafik](https://github.com/OpenDevin/OpenDevin/assets/95778421/5d2ec87d-629f-432a-ad25-3b19385b4da3)\n\nSTEP 27\n11:46:42 - opendevin:INFO: codeact_agent.py:270 - Cost: 0.10 USD | Accumulated Cost: 1.88 USD\n11:46:42 - ACTION\nMessageAction(content='The tetris.js file has been updated to include functionality for the pause button. Please open the index.html file in your web browser again to see the updated functionality.\\n\\nYou should now see the restart, pause, and stop buttons below the Tetris game. The restart button will reset the game, the pause button will pause and resume the game, and the stop button will stop the game.\\n\\nIf you encounter any issues or have further requests, please let me know!', wait_for_response=True, action='message')\n11:46:42 - opendevin:INFO: agent_controller.py:190 - Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT\nINFO:     ('172.17.0.1', 34652) - \"WebSocket /ws?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiI1ZjA3ZDNmNy00NGYxLTQ5MWQtODVhMy0zNTczOTYxZTJkMTgifQ.Xj-_gxQTFH4jgAdQRKmRlCwCLvcbpbjnvNxkieTnDCs\" [accepted]\nStarting loop_recv for sid: 5f07d3f7-44f1-491d-85a3-3573961e2d18\n11:46:42 - opendevin:INFO: session.py:40 - WebSocket disconnected, sid: 5f07d3f7-44f1-491d-85a3-3573961e2d18\nINFO:     connection closed\nINFO:     connection open\nINFO:     172.17.0.1:34660 - \"GET /api/messages/total HTTP/1.1\" 200 OK\n\nConnection lost randomly\n\nnow it's stuck like this\n",
    "state": "closed",
    "comments": 9,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1778/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1778/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1778/events",
    "user_login": "PierrunoYT",
    "user_url": "https://github.com/PierrunoYT",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 2,
    "total_image_count": 3
  },
  {
    "id": 2291496086,
    "number": 1745,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1745",
    "type": "issue",
    "labels": "enhancement,Stale",
    "created_date": "2024-05-12 20:50:46",
    "updated_date": "2024-08-13 15:06:56",
    "resolved_date": "2024-08-13 15:06:56",
    "title": "Support expanding frontend window in all directions",
    "body": "**What problem or use case are you trying to solve?**\n\nContext: https://opendevin.slack.com/archives/C06QT0AGY4W/p1715546877469529?thread_ts=1715007881.546429&cid=C06QT0AGY4W\n\n**Describe the UX of the solution you'd like**\n\nAllow each window to dragged to all directions:\n\n![image](https://github.com/OpenDevin/OpenDevin/assets/38853559/aafb8a08-62c5-4f44-89b7-eeeb2fcb6732)\n\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 4,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1745/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1745/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1745/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2291493489,
    "number": 1744,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1744",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-05-12 20:42:15",
    "updated_date": "2024-12-15 20:06:19",
    "resolved_date": "2024-12-15 20:06:19",
    "title": "Support running with multiple parallel sessions",
    "body": "**What problem or use case are you trying to solve?**\n\nContext: https://opendevin.slack.com/archives/C06QT0AGY4W/p1715546336329329?thread_ts=1715007881.546429&cid=C06QT0AGY4W\n\n**Describe the UX of the solution you'd like**\n\nAllowing multiple parallel sessions to be ran. Probably need to wait after (and build into) https://github.com/OpenDevin/OpenDevin/issues/1086.\n\n![image](https://github.com/OpenDevin/OpenDevin/assets/38853559/ae0aae29-8533-4061-991f-09b38fdfc2fd)\n\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 9,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1744/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1744/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1744/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": "tofarr,amanape",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2279446061,
    "number": 1590,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1590",
    "type": "issue",
    "labels": "enhancement,good first issue",
    "created_date": "2024-05-05 10:07:18",
    "updated_date": "2024-06-25 06:15:45",
    "resolved_date": "2024-06-25 06:15:45",
    "title": "[Feature]: Add Copy Button to Each Message in Chat Interface",
    "body": "**What problem or use case are you trying to solve?**\nUsers need a quick and easy way to copy text from messages in the chat interface to use elsewhere. This feature will enhance user productivity and improve the overall user experience by facilitating easier sharing and documentation of information exchanged in chat.\n\n**Describe the UX of the solution you'd like**\nI propose adding a **\"Copy\"** button at the **top** or **bottom** of each message within the chat interface. This button should be clearly visible and accessible, ideally represented by a clipboard icon.\n\n**Do you have thoughts on the technical implementation?**\nThe implementation can involve adding an event listener to each copy button that triggers a copy-to-clipboard function when clicked.\n\n**Describe alternatives you've considered**\nI don't know about alternatives\n\n**Additional context**\nThis feature is aimed at enhancing user interaction efficiency within the chat application.\n<img width=\"1355\" alt=\"copy_button\" src=\"https://github.com/OpenDevin/OpenDevin/assets/5805397/4a0e40ed-d81f-4807-842c-d2e385e786ee\">\n\n\n",
    "state": "closed",
    "comments": 7,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1590/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1590/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1590/events",
    "user_login": "isavita",
    "user_url": "https://github.com/isavita",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2275875717,
    "number": 1529,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1529",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-05-02 15:51:40",
    "updated_date": "2024-11-22 19:20:08",
    "resolved_date": "2024-11-22 19:20:08",
    "title": "Allowing user to specialize a general agent by using prompts from community contributed prompt library",
    "body": "**What problem or use case are you trying to solve?**\n\n**Goal**: The user can start with a strong and capable general agent from the `agenthub` but can provide additional information via prompts to \"specialize\" such agent by giving it domain-specific information. These additional prompts can also be saved to some sort of library and can contribute back to OpenDevin's library (similar to OpenAI's GPTs).\n\n**Example**: A user wants GPT-4 to perform click house tasks, and GPT-4 is not quite familiar with that. The idea is that, in this case, the user can create a \"specialized prompt\" containing important snippets of clickhouse documentation with URL links to more of them. The user can then save the prompt, which can just be plain text like CodeAct's [example prompt](https://github.com/OpenDevin/OpenDevin/blob/f19333aa6ec6efe9cd23b345d1d096bc1b36b764/agenthub/codeact_agent/prompt.py#L48-L220), and submit PR to contribute the prompt into the library.\n\nThe next time, when user has `clickhouse` related request, they can just select \"clickhouse-expert\" prompt on top of an agent, and the agent will have a better idea of what it is dealing with.\n\n\n**Describe the UX of the solution you'd like**\n\nUsers can write markdown templates/prompts that easily specialize general agents toward specific tasks (e.g., SWE, Web browsing) -- ideally can do so on the front-end. This is somewhat similar to the current MicroAgent implementation (https://github.com/OpenDevin/OpenDevin/tree/main/agenthub/micro), but not entirely so.\n\nThe front-end interface can look something like [ChatGPT-Next-Web](https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web).\n\n![image](https://github.com/OpenDevin/OpenDevin/assets/38853559/ab510a97-3541-40bc-bca8-c2b8e4fcbf32)\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n\nEach \"prompt\" can be:\n1. A high-level natural language description about what an agent should perform (e.g., you should look through all directories & XXX), and the agent can translate this into what it has in its own action space\n2. AND/OR A more low-level demonstrations (e.g., demonstrating concrete tools to use, like CodeAct's [example prompt](https://github.com/OpenDevin/OpenDevin/blob/f19333aa6ec6efe9cd23b345d1d096bc1b36b764/agenthub/codeact_agent/prompt.py#L48-L220)\n\nIf we include (2), we might need an agent-specific implementation for each \"prompt\" since different agents may handle action spaces differently.",
    "state": "closed",
    "comments": 6,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1529/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1529/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1529/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": "enyst,rbren",
    "milestone_title": "2024-11",
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2273668215,
    "number": 1491,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1491",
    "type": "issue",
    "labels": "enhancement,good first issue,Stale",
    "created_date": "2024-05-01 15:06:15",
    "updated_date": "2024-12-01 02:30:03",
    "resolved_date": "2024-12-01 02:30:03",
    "title": "frontend: Support displaying images/videos/pdfs in the workspace",
    "body": "**What problem or use case are you trying to solve?**\n\nImages are not properly rendered in the Code Editor (though maybe it is not supposed to do that... -- I'm open to discussion about this).\n\n<img width=\"597\" alt=\"image\" src=\"https://github.com/OpenDevin/OpenDevin/assets/38853559/e41ab643-bd23-41d4-aeee-ae818dd31a95\">\n\n**Describe the UX of the solution you'd like**\n\nI kind of expect a VSCode-like experience that it can display some simple media file (jpg, png, or even mp4 and pdf) and show an error message when it encounters a binary file type (e.g., `.exe`) that it does not support.\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 11,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1491/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1491/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1491/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": "itzpa1,JanumalaAkhilendra,amanape",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2273450383,
    "number": 1487,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1487",
    "type": "issue",
    "labels": "enhancement,good first issue",
    "created_date": "2024-05-01 12:46:36",
    "updated_date": "2024-05-14 06:37:51",
    "resolved_date": "2024-05-10 10:43:28",
    "title": "frontend: Add [continue] and [finish] button for user to click when agent is awaiting user input",
    "body": "**What problem or use case are you trying to solve?**\n\nNow that https://github.com/OpenDevin/OpenDevin/pull/1290 is merged that supports awaiting user input, the agent may ask the user for confirmation (e.g., i propose we do X, Y, Z, do you agree?). It is a bit hassle for user to manually type in \"continue\" and send it to the agent.\n\n**Describe the UX of the solution you'd like**\n\nAdd two buttons when the agent is awaiting user input:\n- **continue**: sends a message \"continue\" to the agent\n- **finish**: end the current task and starts a new one.\n\nIt will look smth like this:\n![image](https://github.com/OpenDevin/OpenDevin/assets/38853559/ee61d01c-00f3-4f38-8e44-a613cdd229c4)\n\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n\nYou can start work on this by using `CodeActAgent`, asking it \"Can you print hello world first, then plot a figure of equation (y=x, x=0,1,2,3,4) using matplotlib?\".\n\nDemo video:\n\nhttps://github.com/OpenDevin/OpenDevin/assets/38853559/745733b3-788f-4d44-b0b0-3454fbe4f1fe\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1487/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1487/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1487/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2266929991,
    "number": 1399,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1399",
    "type": "issue",
    "labels": "enhancement,good first issue",
    "created_date": "2024-04-27 09:18:19",
    "updated_date": "2024-05-09 09:20:04",
    "resolved_date": "2024-05-09 09:20:04",
    "title": "Better rendering of front-end chat: resolve overflow issue and add syntax highlighting",
    "body": "**What problem or use case are you trying to solve?**\n\nMarkdown is NOT rendered properly while the animation of generation is happening.\n\n![image](https://github.com/OpenDevin/OpenDevin/assets/38853559/8129f09e-5552-42ea-a218-3b34640b7d23)\n\n\nWhen generation is completed, the code block is properly displayed:\n\n<img width=\"619\" alt=\"image\" src=\"https://github.com/OpenDevin/OpenDevin/assets/38853559/dd8d87bd-ed52-4843-8e92-1aa5fd9c38bf\">\n\n**Describe the UX of the solution you'd like**\n\n\nBut:\n\n- The chat bubble somehow overflowed. Is there a way that we make the code block horizontally scrollable rather than make the entire chat window have a horizontal scroll bar (like in the screenshot)?\n- It would be nice if we could add automatic syntax highlights to those code blocks.\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1399/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1399/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1399/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2265194510,
    "number": 1379,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1379",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-26 08:00:23",
    "updated_date": "2024-06-08 19:19:04",
    "resolved_date": "2024-06-08 19:19:04",
    "title": "[Feature]: Support uploading/downloading file through front-end",
    "body": "**What problem or use case are you trying to solve?**\n\nSupport uploading and downloading files through the front end. This will allow the agent to perform data analytics tasks by looking at user-uploaded content (e.g., CSV, excel, or even a zip file, etc.).\n\n**Describe the UX of the solution you'd like**\n\n- Support uploading the files to `workspace` by simply dragging files to the workspace in UI or adding a button for uploading.\n- Support downloading file (not sure what's the best way to do it).\n- Maybe support the ability to move file (but it may confuses the agent)\n\n<img width=\"488\" alt=\"image\" src=\"https://github.com/OpenDevin/OpenDevin/assets/38853559/5e54ea34-48dd-403f-817c-2ed660539bb6\">\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\nHaving user directly modify the mounted workspace folder on their disk - this is probably not a good user experience as the user need to switch back-and-forth.\n\n**Additional context**\n\n---\n\nProgress:\n\n- [X] Upload single file: resolved by https://github.com/OpenDevin/OpenDevin/pull/1394\n- [X] Upload multiple files: https://github.com/OpenDevin/OpenDevin/pull/1718\n- [ ] Download files",
    "state": "closed",
    "comments": 11,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1379/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1379/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1379/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": "amanape",
    "milestone_title": "2024-05",
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2265179791,
    "number": 1378,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1378",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-26 07:51:43",
    "updated_date": "2024-04-26 18:05:19",
    "resolved_date": "2024-04-26 18:05:18",
    "title": "Render frontend chat as markdown",
    "body": "**What problem or use case are you trying to solve?**\n\nWhen the LLM agent outputs markdown responses to the user, it is not rendered properly:\n\n![image](https://github.com/OpenDevin/OpenDevin/assets/38853559/e3b4ca07-cd6e-4b68-85e5-9718d238a8ed)\n\n<img width=\"720\" alt=\"image\" src=\"https://github.com/OpenDevin/OpenDevin/assets/38853559/6fb826e8-767c-4790-be7e-2f09e177a1d2\">\n\n**Describe the UX of the solution you'd like**\n\nRender agent's response (thoughts) as markdown so it gets properly rendered.\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1378/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1378/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1378/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": NaN,
    "milestone_title": "2024-04",
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 0,
    "total_image_count": 2
  },
  {
    "id": 2260755885,
    "number": 1332,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1332",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-24 08:49:09",
    "updated_date": "2024-04-28 13:57:28",
    "resolved_date": "2024-04-25 15:49:00",
    "title": "Do we have any plan on extending OpenDevin to a multi-agent framework?",
    "body": "**What problem or use case are you trying to solve?**\nWhen solving a complex github issue, maybe we need more than one person/role to participate in. For example, we need an architect to make a total plan and break down tasks, three developers to write code(can be parallel ), one test engineer( waiting for each output of the developer's code ). \nWith the role split and agents collaboration, the process is clearer and more like an actual problem-solving process. Maybe we can even visualize this process.\n\n**Describe the UX of the solution you'd like**\nThere are some paper or open-source projects working on it. For example:\nmetagpt (https://github.com/geekan/MetaGPT):\n![image](https://github.com/OpenDevin/OpenDevin/assets/1708914/67bab07b-f2e6-40ec-b796-99210fdc86e1)\nAutoDev: Automated AI-Driven Development (https://arxiv.org/abs/2403.08299) :\n![image](https://github.com/OpenDevin/OpenDevin/assets/1708914/afe8af65-33af-477b-8398-d0af24974809)\nmagis: LLM-Based Multi-Agent Framework for GitHub Issue ReSolution (https://arxiv.org/pdf/2403.17927.pdf) :\n![image](https://github.com/OpenDevin/OpenDevin/assets/1708914/b7c18168-15f6-43ca-b670-f772c1c71b6f)\n\n**Do you have thoughts on the technical implementation?**\nNot yet... \nJust want to know, what's our opinion on this? One agent is fine, no need to make the framework too complex? What's our plan on it? \n",
    "state": "closed",
    "comments": 4,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1332/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1332/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1332/events",
    "user_login": "assertion",
    "user_url": "https://github.com/assertion",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 3,
    "comment_image_count": 0,
    "total_image_count": 3
  },
  {
    "id": 2239564692,
    "number": 1047,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/1047",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-12 09:37:34",
    "updated_date": "2024-04-16 23:01:38",
    "resolved_date": "2024-04-15 08:06:30",
    "title": "docker start pod faild",
    "body": "531988dfef7a   ghcr.io/opendevin/sandbox   \"/usr/sbin/sshd -D -‚Ä¶\"   13 seconds ago   Exited (255) 13 seconds ago             sandbox-083e5d99-17e5-4175-87b4-4faf771455ff\nf3a1386b117b   ghcr.io/opendevin/sandbox   \"/usr/sbin/sshd -D -‚Ä¶\"   26 seconds ago   Exited (255) 25 seconds ago             sandbox-f0eda1d4-ea00-4568-998a-53f9b855eb11\nd10d71a613ae   ghcr.io/opendevin/sandbox   \"/usr/sbin/sshd -D -‚Ä¶\"   5 minutes ago    Exited (255) 5 minutes ago              sandbox-d5f7773d-6d03-4df4-b032-263ae826c6fe\n02cfc8f104d3   ghcr.io/opendevin/sandbox   \"/usr/sbin/sshd -D -‚Ä¶\"   36 minutes ago   Up 36 minutes                           sandbox-86d75264-f1bf-4177-8430-08cb77eb0f33\n[root@iZrj9huih64xl89h2l5pcwZ frontend]#\n<img width=\"955\" alt=\"image\" src=\"https://github.com/OpenDevin/OpenDevin/assets/48249754/e575f4a1-29ec-433a-9625-9eafaefaef85\">\n",
    "state": "closed",
    "comments": 9,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1047/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1047/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/1047/events",
    "user_login": "he-aook",
    "user_url": "https://github.com/he-aook",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2235858038,
    "number": 989,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/989",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-10 15:16:54",
    "updated_date": "2024-04-15 15:01:29",
    "resolved_date": "2024-04-15 15:01:29",
    "title": "Enable --host exposure to bind port to network so can be reacheable from outside",
    "body": "**What problem or use case are you trying to solve?**\nTo enable exposure of service to be callable from outside running machine\n\n**Describe the UX of the solution you'd like**\nAdd additional flag for `make run` command \n\n**Do you have thoughts on the technical implementation?**\nCurrently I've added this flag for npm server to Makefile\n\nhttps://github.com/OpenDevin/OpenDevin/blob/main/Makefile#L131\n\n**Describe alternatives you've considered**\nTo add --host flat to npm run start\n\n![imagen](https://github.com/OpenDevin/OpenDevin/assets/672235/5cc0a638-1659-4bcd-8220-8eb74a962b7c)\n\n**Additional context**\nResult\n\n![imagen](https://github.com/OpenDevin/OpenDevin/assets/672235/c50c63c4-c459-40d5-b189-a06444e9ebb2)\n![imagen](https://github.com/OpenDevin/OpenDevin/assets/672235/82cac833-b8a8-40c1-9644-abd1813480a1)\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/989/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/989/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/989/events",
    "user_login": "alanreynosov",
    "user_url": "https://github.com/alanreynosov",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 3,
    "comment_image_count": 0,
    "total_image_count": 3
  },
  {
    "id": 2230603718,
    "number": 892,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/892",
    "type": "issue",
    "labels": "enhancement,good first issue",
    "created_date": "2024-04-08 08:38:56",
    "updated_date": "2024-09-08 19:45:52",
    "resolved_date": "2024-09-08 19:45:52",
    "title": "Allow sandbox to interactively captures password / stdin inputs",
    "body": "> This is great @xingyaoww so fast for implementing this! Thank you!\n> \n> I think the `pexpect` module can also handle things like prompting to input password, as well as those Y/N prompts in the middle of a process.\n> \n> Now it's using `ssh.prompt()` to look for shell prompts like `#` or `$` to determine if the previous command is finished as for when to read the output and send the input. For processes asking password like \"Password:\" or apt-get \"Proceed? y/n\" do we need to add a bit more regex to the default prompt https://pexpect.readthedocs.io/en/stable/api/pexpect.html#pexpect.spawn.expect in order to handle those \"wait-for-input\", or does the current implementation works out of the box for \"y/n\" and \"password:\". I am thinking if `ssh.expect(\"Password:\")` or `ssh.expect(\"y/n\")` is needed?\n> \n> **Not a merge-blocking comment**\n\nAs discussed by @frankxu2004 in #847, we may need something like `ssh.expect(\"Password:\")` or `ssh.expect(\"y/n\")`  to capture some more cases in [sandbox.py](https://github.com/OpenDevin/OpenDevin/blob/cc6626ff0da9f3c146e88c179f1e1432b9d60550/opendevin/sandbox/sandbox.py#L4)\n\nOne simple issue that requires this: Right not if you run `sudo apt-get update`, the sandbox will stuck (probably waiting for a `password:` input) - ideally our code should capture that and automatically put in the password for that `sudo` command.\n\n<img width=\"1087\" alt=\"image\" src=\"https://github.com/OpenDevin/OpenDevin/assets/38853559/a42f56df-670f-4aa1-b13b-f9b8742558a4\">\n\n@frankxu2004 Feel free to starts a PR if you are interested :)",
    "state": "closed",
    "comments": 7,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/892/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/892/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/892/events",
    "user_login": "xingyaoww",
    "user_url": "https://github.com/xingyaoww",
    "assignees": "xingyaoww",
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2226829829,
    "number": 744,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/744",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-05 02:20:05",
    "updated_date": "2024-04-05 03:22:03",
    "resolved_date": "2024-04-05 03:19:36",
    "title": "No logs printed anymore",
    "body": "<!-- You MUST fill out this template. We will close issues that don't include enough information to reproduce -->\n#### Describe the bug\n<!-- a short description of the problem -->\n![319831896-5f28c4f3-1235-4dbd-bfb7-e55763847bbf](https://github.com/OpenDevin/OpenDevin/assets/101955267/4f0fa5d1-6792-468b-9bd4-090ed5e33d62)\n\nLike described here https://github.com/OpenDevin/OpenDevin/issues/740\n\n> [stratte89](https://github.com/stratte89) before i could see the steps in the opendevin server terminal. Because some model tend to stop replying in the frontend but still outputting on the terminal, without outputting any files in the workspace tho. you can see that on the pic. So it was good to check if there was a a problem to change the model, not waiting for output and thinking its just working, it was even saying its finnished although it did not write any code at all.\n> \n> [foragerr](https://github.com/foragerr): They're seeing the effect of this: https://github.com/OpenDevin/OpenDevin/pull/378#discussion_r1552135801\n> \n> The logs now don't print to console, instead they go into a file in ./logs .. I think.\n> \n> [stratte89](https://github.com/stratte89)i'd love to print it again or having like another tab next to the browser with the live logs so you can check whats actually going on\n\n#### Setup and configuration\n**Current version**:\n<!-- run `git log -n 1` to see this -->\n```bash\n```\n\n(base) stratte@stratte-MS-7D08:~/Schreibtisch/AI/OpenDevin4$ run `git log -n 1\n> \n\ntheres no output.\n\n<!-- tell us everything about your environment -->\n**My config.toml and environment vars** (be sure to redact API keys):\n```toml\n```\nUbuntu, oobabooga webui, i5 11400, 32gb ram, 3080.\nLLM_API_KEY=\"na\"\nLLM_BASE_URL=\"http://0.0.0.0:5000/v1\"\nLLM_MODEL=\"openai/alpindale_Mistral-7B-v0.2-hf\"\nLLM_EMBEDDING_MODEL=\"lokal\"\nWORKSPACE_DIR=\"./workspace\"\nMAX_ITERATIONS=20000\n**My model and agent** (you can see these settings in the UI):\n* Model: Code-Mistral-7B-Q3_K_S.gguf\n* Agent: Monologue\n\n**Commands I ran to install and run OpenDevin**:\n``` Make build, Make run\n```\n\n**Steps to Reproduce**:\n1. just run it and tell it to do something and it wont show logs in the terminal.\n2.\n3.\n\n**Logs, error messages, and screenshots**:\n\n#### Additional Context\n\n",
    "state": "closed",
    "comments": 19,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/744/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/744/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/744/events",
    "user_login": "stratte89",
    "user_url": "https://github.com/stratte89",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2221950435,
    "number": 637,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/637",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-04-03 05:45:25",
    "updated_date": "2024-04-09 19:51:01",
    "resolved_date": "2024-04-09 19:51:00",
    "title": "Windows 10 full support with local LLM (almost achieved)",
    "body": "**Summary**\nI was able to have a running version of OpenDevin on Windows 10 (not WSL) before the change to Makefile. I switched to WSL since I thought I had no other choice, but whatever I did finished like the issue #561 (ws://localhost:3001/ws). The package manager for Windows Chocolatey that comes with Node.js has a \"make\" installer (https://community.chocolatey.org/packages/make) so I tried to set it up straight on Windows 10 (which would be better than WSL imho). \"uvloop\" does not work on Windows, but I read that fastapi works without it on Windows, so I removed the dependency, ran \"make build\" and was able to run \"make start-backend\" + \"make start-frontend\" without errors (\"make run\" seems to have issues right now). I tried to run it with my old LM Studio config and got it to work.\n\nLM Studio:\n[2024-04-03 01:24:08.701] [INFO] [LM STUDIO SERVER] Supported endpoints:\n[2024-04-03 01:24:08.701] [INFO] [LM STUDIO SERVER] ->\tGET  http://localhost:1234/v1/models\n[2024-04-03 01:24:08.702] [INFO] [LM STUDIO SERVER] ->\tPOST http://localhost:1234/v1/chat/completions\n[2024-04-03 01:24:08.702] [INFO] [LM STUDIO SERVER] ->\tPOST http://localhost:1234/v1/completions\n\nconfig.toml:\nLLM_BASE_URL=\"http://localhost:1234/v1/\"\nLLM_API_KEY=\"lm-studio\"\nLLM_EMBEDDING_MODEL=\"local\"\nWORKSPACE_DIR=\"./workspace\"\n\n<img width=\"1920\" alt=\"OpenDevin with LM Studio\" src=\"https://github.com/OpenDevin/OpenDevin/assets/5668657/d2786286-b2cf-4b96-a9f2-86371c3f6364\">\n\n<img width=\"1920\" alt=\"OpenDevin working with LM Studio\" src=\"https://github.com/OpenDevin/OpenDevin/assets/5668657/b418a4de-e698-44bd-98a2-0e597c4b1d1a\">\n\nIt interacts with the console too.\n\n**Motivation**\nUsing Windows 10 instead of WSL and full integration of LM Studio\n\n**Technical Design**\nWindows 10 + \"choco install make\" + LM Studio\n\n**Alternatives to Consider**\n\n**Additional context**\n",
    "state": "closed",
    "comments": 5,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/637/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/637/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/637/events",
    "user_login": "Redrum624",
    "user_url": "https://github.com/Redrum624",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 2,
    "comment_image_count": 1,
    "total_image_count": 3
  },
  {
    "id": 2216565903,
    "number": 397,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/397",
    "type": "issue",
    "labels": "enhancement,good first issue",
    "created_date": "2024-03-30 16:23:43",
    "updated_date": "2024-03-31 18:47:55",
    "resolved_date": "2024-03-31 18:47:54",
    "title": "Improve the model picker",
    "body": "**What problem or use case are you trying to solve?**\nThe list of models is _massive_ (screenshot)\n\n**Describe the UX of the solution you'd like**\nSome ideas on how to fix this:\n* Create a searchable dropdown, with a max-height (instead of using a `<select>`)\n* Sort the models alphabetically\n* Only show a shortlist of the 10-20 most popular models\n\n**Do you have thoughts on the technical implementation?**\nProbably use a searchable dropdown UI component, and sort\n\n**Describe alternatives you've considered**\n<img width=\"1191\" alt=\"Screenshot 2024-03-30 at 12 23 59‚ÄØPM\" src=\"https://github.com/OpenDevin/OpenDevin/assets/7611973/b316175d-849b-4ff1-b0f0-df68ee3e3c60\">\n\n\n**Additional context**\n",
    "state": "closed",
    "comments": 2,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/397/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/397/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/397/events",
    "user_login": "rbren",
    "user_url": "https://github.com/rbren",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 1,
    "total_image_count": 2
  },
  {
    "id": 2214967414,
    "number": 332,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/332",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-03-29 09:05:05",
    "updated_date": "2024-04-01 17:12:36",
    "resolved_date": "2024-04-01 17:12:36",
    "title": "Implement rate-limit backoff",
    "body": "**What problem or use case are you trying to solve?**\n\n**Describe the UX of the solution you'd like**\nshould control the request\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n<img width=\"939\" alt=\"image\" src=\"https://github.com/OpenDevin/OpenDevin/assets/4476322/4630e1cd-7fb0-479b-bc76-493678d740af\">",
    "state": "closed",
    "comments": 5,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/332/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/332/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/332/events",
    "user_login": "bravekingzhang",
    "user_url": "https://github.com/bravekingzhang",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 2,
    "total_image_count": 3
  },
  {
    "id": 2209831694,
    "number": 235,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/235",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-03-27 04:34:57",
    "updated_date": "2024-04-05 18:27:19",
    "resolved_date": "2024-04-05 18:27:19",
    "title": "Automatic reconnection after websocket disconnects",
    "body": "**What problem or use case are you trying to solve?**\n\nClient websocket always disconnected\n\n**Describe the UX of the solution you'd like**\n\n**Do you have thoughts on the technical implementation?**\n\nMaybe autodetect the connection status and reconnect the server\n\n**Describe alternatives you've considered**\n\n**Additional context**\n\nError sending data to client \nError sending data to client \nClient websocket disconnected (<CloseCode.ABNORMAL_CLOSURE: 1006>, None)\nINFO:     connection closed\n\n<img width=\"433\" alt=\"1711513841377\" src=\"https://github.com/OpenDevin/OpenDevin/assets/13444641/13031484-465a-40e0-bb73-fe79b88514e3\">\n",
    "state": "closed",
    "comments": 3,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/235/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/235/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/235/events",
    "user_login": "universea",
    "user_url": "https://github.com/universea",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  },
  {
    "id": 2208745749,
    "number": 208,
    "html_url": "https://github.com/All-Hands-AI/OpenHands/issues/208",
    "type": "issue",
    "labels": "enhancement",
    "created_date": "2024-03-26 16:32:30",
    "updated_date": "2024-03-28 01:09:23",
    "resolved_date": "2024-03-28 01:09:23",
    "title": "Add `model` and `agent` selectors to frontend",
    "body": "**What problem or use case are you trying to solve?**\nLet the user choose which model and agent they want to use\n\n**Describe the UX of the solution you'd like**\nI'm imagining a toolbar across the top of the chat section, where you can pick a model and an agent\n\n**Do you have thoughts on the technical implementation?**\n* Agent can be hard-coded to LangchainsAgent and CodeactAgent for now (bonus points for an API that exposes them)\n* Model should be taken from https://docs.litellm.ai/docs/providers (is there a way to expose the list via an API in python?)\n  * maybe hard-code a list of popular models if this is hard\n* prompt for an API key when model changes\n* Save settings in localstorage\n  * one API key per model\n\nWhen either option changes, we should send an `initialize` action on the websocket to re-initialize the agent.\n\n<img width=\"957\" alt=\"Screenshot 2024-03-26 at 12 29 11‚ÄØPM\" src=\"https://github.com/OpenDevin/OpenDevin/assets/7611973/107fcee6-1e21-48c0-8df1-56c1820e0023\">\n",
    "state": "closed",
    "comments": 1,
    "state_reason": "completed",
    "repository_url": "https://api.github.com/repos/All-Hands-AI/OpenHands",
    "labels_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/208/labels{/name}",
    "comments_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/208/comments",
    "events_url": "https://api.github.com/repos/All-Hands-AI/OpenHands/issues/208/events",
    "user_login": "rbren",
    "user_url": "https://github.com/rbren",
    "assignees": NaN,
    "milestone_title": NaN,
    "milestone_description": NaN,
    "pull_request_url": NaN,
    "body_image_count": 1,
    "comment_image_count": 0,
    "total_image_count": 1
  }
]